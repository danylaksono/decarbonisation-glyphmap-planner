/*!
* MarchingSquaresJS
* version 1.3.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2019 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/function F(a,l,p){return a<l?(p-a)/(l-a):(a-p)/(a-l)}function O(a,l,p,n){var e;return p>n&&(e=p,p=n,n=e),a<l?a<p?(p-a)/(l-a):(n-a)/(l-a):a>n?(a-n)/(a-l):(a-p)/(a-l)}function z(a,l,p,n){return a<l?(p-a)/(l-a):(a-n)/(a-l)}function H(a,l,p,n){return a<l?(n-a)/(l-a):(a-p)/(a-l)}function I(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.noQuadTree=!1,this.noFrame=!1}function K(a){var l,p,n,e,o;for(e=new I,a=a||{},o=Object.keys(e),l=0;l<o.length;l++)p=o[l],n=a[p],typeof n<"u"&&n!==null&&(e[p]=n);return e.polygons_full=!e.polygons,e.interpolate=O,e.interpolate_a=z,e.interpolate_b=H,e}function P(a){var l,p,n,e,o;for(e=new I,a=a||{},o=Object.keys(e),l=0;l<o.length;l++)p=o[l],n=a[p],typeof n<"u"&&n!==null&&(e[p]=n);return e.polygons_full=!e.polygons,e.interpolate=F,e}function C(a,l,p,n){var e=[];return a.polygons.forEach(function(o){o.forEach(function(g){g[0]+=l,g[1]+=p}),n.linearRing&&o.push(o[0]),e.push(o)}),e}function L(a,l,p,n){return p===0?(a+=1,l+=n[0][1]):p===1?a+=n[0][0]:p===2?l+=n[0][1]:p===3&&(a+=n[0][0],l+=1),[a,l]}function R(a,l,p){return p===0?a++:p===1||(p===2?l++:p===3&&(a++,l++)),[a,l]}function U(a,l,p){var n,e,o,g,t;for(n=!0,e=a[0].length,o=a.length,t=0;t<o;t++)if(a[t][0]<l||a[t][0]>p||a[t][e-1]<l||a[t][e-1]>p){n=!1;break}if(n&&(a[o-1][0]<l||a[o-1][0]>p||a[o-1][e-1]<l||a[o-1][e-1]>p)&&(n=!1),n){for(g=0;g<e-1;g++)if(a[0][g]<l||a[0][g]>p||a[o-1][g]<l||a[o-1][g]>p){n=!1;break}}return n}function X(a,l){var p,n,e,o,g;for(p=!0,n=a[0].length,e=a.length,g=0;g<e;g++)if(a[g][0]>=l||a[g][n-1]>=l){p=!1;break}if(p&&(a[e-1][0]>=l||a[e-1][n-1]>=l)&&(p=!1),p){for(o=0;o<n-1;o++)if(a[0][o]>=l||a[e-1][o]>l){p=!1;break}}return p}function Y(a,l,p){var n,e,o,g,t,i,r,s,m,b,c,y,u,_,V,f,v=[],d=a.length-1,k=a[0].length-1,A=[["rt","rb"],["br","bl"],["lb","lt"],["tl","tr"]],q=[0,-1,0,1],T=[-1,0,1,0],J=["bl","lb","lt","tl","tr","rt","rb","br"],B={bl:1,br:1,lb:2,lt:2,tl:3,tr:3,rt:0,rb:0};return U(a,p.minV,p.maxV)&&(p.linearRing?v.push([[0,0],[0,d],[k,d],[k,0],[0,0]]):v.push([[0,0],[0,d],[k,d],[k,0]])),l.forEach(function(S,w){S.forEach(function(Q,j){for(n=null,o=0;o<8;o++)if(n=J[o],typeof Q.edges[n]=="object"){for(e=[],g=Q.edges[n],r=n,s=w,m=j,b=!1,c=[w+g.path[0][0],j+g.path[0][1]],e.push(c);!b&&(y=l[s][m],typeof y.edges[r]=="object");)if(g=y.edges[r],delete y.edges[r],V=g.path[1],V[0]+=s,V[1]+=m,e.push(V),r=g.move.enter,s=s+g.move.x,m=m+g.move.y,typeof l[s]>"u"||typeof l[s][m]>"u"){if(u=0,_=0,s===k)s--,u=0;else if(s<0)s++,u=2;else if(m===d)m--,u=3;else if(m<0)m++,u=1;else throw new Error("Left the grid somewhere in the interior!");if(s===w&&m===j&&u===B[n]){b=!0,r=n;break}for(;;){if(f=!1,_>4)throw new Error("Direction change counter overflow! This should never happen!");if(!(typeof l[s]>"u"||typeof l[s][m]>"u")){for(y=l[s][m],t=0;t<A[u].length;t++)if(i=A[u][t],typeof y.edges[i]=="object"){g=y.edges[i],e.push(L(s,m,u,g.path)),r=i,f=!0;break}}if(f)break;if(e.push(R(s,m,u)),s+=q[u],m+=T[u],(typeof l[s]>"u"||typeof l[s][m]>"u")&&(u===0&&m<0||u===1&&s<0||u===2&&m===d||u===3&&s===k)&&(s-=q[u],m-=T[u],u=(u+1)%4,_++),s===w&&m===j&&u===B[n]){b=!0,r=n;break}}}p.linearRing&&(e[e.length-1][0]!==c[0]||e[e.length-1][1]!==c[1])&&e.push(c),v.push(e)}})}),v}function Z(a,l,p){var n,e,o,g,t,i,r,s,m,b,c,y,u,_,V,f=[],v=a.length-1,d=a[0].length-1,k=["right","bottom","left","top"],A=[0,-1,0,1],q=[-1,0,1,0],T={bottom:1,left:2,top:3,right:0};return p.noFrame||X(a,p.threshold)&&(p.linearRing?f.push([[0,0],[0,v],[d,v],[d,0],[0,0]]):f.push([[0,0],[0,v],[d,v],[d,0]])),l.forEach(function(J,B){J.forEach(function(S,w){for(n=null,e=0;e<4;e++)if(n=k[e],typeof S.edges[n]=="object"){for(t=[],o=S.edges[n],i=n,r=B,s=w,m=!1,b=[B+o.path[0][0],w+o.path[0][1]],t.push(b);!m&&(g=l[r][s],typeof g.edges[i]=="object");)if(o=g.edges[i],delete g.edges[i],c=o.path[1],c[0]+=r,c[1]+=s,t.push(c),i=o.move.enter,r=r+o.move.x,s=s+o.move.y,typeof l[r]>"u"||typeof l[r][s]>"u"){if(!p.linearRing)break;if(y=0,u=0,r===d?(r--,y=0):r<0?(r++,y=2):s===v?(s--,y=3):s<0&&(s++,y=1),r===B&&s===w&&y===T[n]){m=!0,i=n;break}for(;;){if(_=!1,u>4)throw new Error("Direction change counter overflow! This should never happen!");if(!(typeof l[r]>"u"||typeof l[r][s]>"u")&&(g=l[r][s],V=k[y],typeof g.edges[V]=="object")){o=g.edges[V],t.push(L(r,s,y,o.path)),i=V,_=!0;break}if(_)break;if(t.push(R(r,s,y)),r+=A[y],s+=q[y],(typeof l[r]>"u"||typeof l[r][s]>"u")&&(y===0&&s<0||y===1&&r<0||y===2&&s===v||y===3&&r===d)&&(r-=A[y],s-=q[y],y=(y+1)%4,u++),r===B&&s===w&&y===T[n]){m=!0,i=n;break}}}p.linearRing&&(t[t.length-1][0]!==b[0]||t[t.length-1][1]!==b[1])&&t.push(b),f.push(t)}})}),f}function E(a,l,p,n,e){var o=n,g=e,t=0,i=0;if(this.x=l,this.y=p,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,n===1&&e===1)this.lowerBound=Math.min(a[p][l],a[p][l+1],a[p+1][l+1],a[p+1][l]),this.upperBound=Math.max(a[p][l],a[p][l+1],a[p+1][l+1],a[p+1][l]);else{if(n>1){for(;o!==0;)o=o>>1,t++;n===1<<t-1&&t--,o=1<<t-1}if(e>1){for(;g!==0;)g=g>>1,i++;e===1<<i-1&&i--,g=1<<i-1}this.childA=new E(a,l,p,o,g),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,n-o>0&&(this.childB=new E(a,l+o,p,n-o,g),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),e-g>0&&(this.childC=new E(a,l+o,p+g,n-o,e-g),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),e-g>0&&(this.childD=new E(a,l,p+g,o,e-g),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}E.prototype.cellsInBand=function(a,l,p){var n=[];return p=typeof p>"u"?!0:p,this.lowerBound>l||this.upperBound<a||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(n=n.concat(this.childA.cellsInBand(a,l,p))),this.childB&&(n=n.concat(this.childB.cellsInBand(a,l,p))),this.childD&&(n=n.concat(this.childD.cellsInBand(a,l,p))),this.childC&&(n=n.concat(this.childC.cellsInBand(a,l,p)))):(p||this.lowerBound<=a||this.upperBound>=l)&&n.push({x:this.x,y:this.y})),n},E.prototype.cellsBelowThreshold=function(a,l){var p=[];return l=typeof l>"u"?!0:l,this.lowerBound>a||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(p=p.concat(this.childA.cellsBelowThreshold(a,l))),this.childB&&(p=p.concat(this.childB.cellsBelowThreshold(a,l))),this.childD&&(p=p.concat(this.childD.cellsBelowThreshold(a,l))),this.childC&&(p=p.concat(this.childC.cellsBelowThreshold(a,l)))):(l||this.upperBound>=a)&&p.push({x:this.x,y:this.y})),p};function N(a){var l,p;if(!a)throw new Error("data is required");if(!Array.isArray(a)||!Array.isArray(a[0]))throw new Error("data must be scalar field, i.e. array of arrays");if(a.length<2)throw new Error("data must contain at least two rows");if(p=a[0].length,p<2)throw new Error("data must contain at least two columns");for(l=1;l<a.length;l++){if(!Array.isArray(a[l]))throw new Error("Row "+l+" is not an array");if(a[l].length!=p)throw new Error("unequal row lengths detected, please provide a regular grid")}this.data=a,this.root=new E(a,0,0,a[0].length-1,a.length-1)}function W(a,l,p){var n,e,o,g=!1,t=!1,i=null,r=null,s=null,m=null,b=null,c=[];if(!a)throw new Error("data is required");if(l==null)throw new Error("threshold is required");if(p&&typeof p!="object")throw new Error("options must be an object");if(n=P(p),a instanceof N)i=a,r=a.root,s=a.data,n.noQuadTree||(g=!0);else if(Array.isArray(a)&&Array.isArray(a[0]))s=a;else throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");if(Array.isArray(l)){for(t=!0,n.noQuadTree||(g=!0),e=0;e<l.length;e++)if(isNaN(+l[e]))throw new Error("threshold["+e+"] is not a number")}else{if(isNaN(+l))throw new Error("threshold must be a number or array of numbers");l=[l]}return g&&!r&&(i=new N(s),r=i.root,s=i.data),n.verbose&&(n.polygons?console.log("MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell"):console.log("MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid"),t&&console.log("MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold")),l.forEach(function(y,u){if(b=[],n.threshold=y,n.verbose&&console.log("MarchingSquaresJS-isoLines: computing iso lines for threshold "+y),n.polygons)if(g)r.cellsBelowThreshold(n.threshold,!0).forEach(function(_){b=b.concat(C(D(s,_.x,_.y,n),_.x,_.y,n))});else for(o=0;o<s.length-1;++o)for(u=0;u<s[0].length-1;++u)b=b.concat(C(D(s,u,o,n),u,o,n));else{for(m=[],u=0;u<s[0].length-1;++u)m[u]=[];if(g)r.cellsBelowThreshold(n.threshold,!1).forEach(function(_){m[_.x][_.y]=D(s,_.x,_.y,n)});else for(u=0;u<s[0].length-1;++u)for(o=0;o<s.length-1;++o)m[u][o]=D(s,u,o,n);b=Z(s,m,n)}t?c.push(b):c=b,typeof n.successCallback=="function"&&n.successCallback(c,y)}),c}function D(a,l,p,n){var e,o,g,t,i,r,s=0,m=a[p+1][l],b=a[p+1][l+1],c=a[p][l+1],y=a[p][l],u=n.threshold;if(!(isNaN(y)||isNaN(c)||isNaN(b)||isNaN(m))){switch(s|=m>=u?8:0,s|=b>=u?4:0,s|=c>=u?2:0,s|=y>=u?1:0,s=+s,r={cval:s,polygons:[],edges:{},x0:y,x1:c,x2:b,x3:m},s){case 0:n.polygons&&r.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:e=n.interpolate(y,m,u),t=n.interpolate(y,c,u),n.polygons_full&&(r.edges.left={path:[[0,e],[t,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&r.polygons.push([[0,0],[0,e],[t,0]]);break;case 13:t=n.interpolate(y,c,u),o=n.interpolate(c,b,u),n.polygons_full&&(r.edges.bottom={path:[[t,0],[1,o]],move:{x:1,y:0,enter:"left"}}),n.polygons&&r.polygons.push([[t,0],[1,o],[1,0]]);break;case 11:o=n.interpolate(c,b,u),g=n.interpolate(m,b,u),n.polygons_full&&(r.edges.right={path:[[1,o],[g,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&r.polygons.push([[1,o],[g,1],[1,1]]);break;case 7:e=n.interpolate(y,m,u),g=n.interpolate(m,b,u),n.polygons_full&&(r.edges.top={path:[[g,1],[0,e]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&r.polygons.push([[g,1],[0,e],[0,1]]);break;case 1:e=n.interpolate(y,m,u),t=n.interpolate(y,c,u),n.polygons_full&&(r.edges.bottom={path:[[t,0],[0,e]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&r.polygons.push([[t,0],[0,e],[0,1],[1,1],[1,0]]);break;case 2:t=n.interpolate(y,c,u),o=n.interpolate(c,b,u),n.polygons_full&&(r.edges.right={path:[[1,o],[t,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&r.polygons.push([[0,0],[0,1],[1,1],[1,o],[t,0]]);break;case 4:o=n.interpolate(c,b,u),g=n.interpolate(m,b,u),n.polygons_full&&(r.edges.top={path:[[g,1],[1,o]],move:{x:1,y:0,enter:"left"}}),n.polygons&&r.polygons.push([[0,0],[0,1],[g,1],[1,o],[1,0]]);break;case 8:e=n.interpolate(y,m,u),g=n.interpolate(m,b,u),n.polygons_full&&(r.edges.left={path:[[0,e],[g,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&r.polygons.push([[0,0],[0,e],[g,1],[1,1],[1,0]]);break;case 12:e=n.interpolate(y,m,u),o=n.interpolate(c,b,u),n.polygons_full&&(r.edges.left={path:[[0,e],[1,o]],move:{x:1,y:0,enter:"left"}}),n.polygons&&r.polygons.push([[0,0],[0,e],[1,o],[1,0]]);break;case 9:t=n.interpolate(y,c,u),g=n.interpolate(m,b,u),n.polygons_full&&(r.edges.bottom={path:[[t,0],[g,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&r.polygons.push([[t,0],[g,1],[1,1],[1,0]]);break;case 3:e=n.interpolate(y,m,u),o=n.interpolate(c,b,u),n.polygons_full&&(r.edges.right={path:[[1,o],[0,e]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&r.polygons.push([[0,e],[0,1],[1,1],[1,o]]);break;case 6:t=n.interpolate(y,c,u),g=n.interpolate(m,b,u),n.polygons_full&&(r.edges.top={path:[[g,1],[t,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&r.polygons.push([[0,0],[0,1],[g,1],[t,0]]);break;case 10:e=n.interpolate(y,m,u),o=n.interpolate(c,b,u),t=n.interpolate(y,c,u),g=n.interpolate(m,b,u),i=(y+c+b+m)/4,n.polygons_full&&(i<u?(r.edges.left={path:[[0,e],[g,1]],move:{x:0,y:1,enter:"bottom"}},r.edges.right={path:[[1,o],[t,0]],move:{x:0,y:-1,enter:"top"}}):(r.edges.right={path:[[1,o],[g,1]],move:{x:0,y:1,enter:"bottom"}},r.edges.left={path:[[0,e],[t,0]],move:{x:0,y:-1,enter:"top"}})),n.polygons&&(i<u?r.polygons.push([[0,0],[0,e],[g,1],[1,1],[1,o],[t,0]]):(r.polygons.push([[0,0],[0,e],[t,0]]),r.polygons.push([[g,1],[1,1],[1,o]])));break;case 5:e=n.interpolate(y,m,u),o=n.interpolate(c,b,u),t=n.interpolate(y,c,u),g=n.interpolate(m,b,u),i=(y+c+b+m)/4,n.polygons_full&&(i<u?(r.edges.bottom={path:[[t,0],[0,e]],move:{x:-1,y:0,enter:"right"}},r.edges.top={path:[[g,1],[1,o]],move:{x:1,y:0,enter:"left"}}):(r.edges.top={path:[[g,1],[0,e]],move:{x:-1,y:0,enter:"right"}},r.edges.bottom={path:[[t,0],[1,o]],move:{x:1,y:0,enter:"left"}})),n.polygons&&(i<u?r.polygons.push([[0,e],[0,1],[g,1],[1,o],[1,0],[t,0]]):(r.polygons.push([[0,e],[0,1],[g,1]]),r.polygons.push([[t,0],[1,o],[1,0]])));break}return r}}var h={square:function(a,l,p,n,e,o){o.polygons&&a.polygons.push([[0,0],[0,1],[1,1],[1,0]])},triangle_bl:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate(l,e,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,t],[g,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,t],[g,0],[0,0]])},triangle_br:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[g,0],[1,t]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[g,0],[1,t],[1,0]])},triangle_tr:function(a,l,p,n,e,o){var g=o.interpolate(p,n,o.minV,o.maxV),t=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(a.edges.rt={path:[[1,g],[t,1]],move:{x:0,y:1,enter:"br"}}),o.polygons&&a.polygons.push([[1,g],[t,1],[1,1]])},triangle_tl:function(a,l,p,n,e,o){var g=o.interpolate(e,n,o.minV,o.maxV),t=o.interpolate(l,e,o.minV,o.maxV);o.polygons_full&&(a.edges.tl={path:[[g,1],[0,t]],move:{x:-1,y:0,enter:"rt"}}),o.polygons&&a.polygons.push([[0,t],[0,1],[g,1]])},tetragon_t:function(a,l,p,n,e,o){var g=o.interpolate(p,n,o.minV,o.maxV),t=o.interpolate(l,e,o.minV,o.maxV);o.polygons_full&&(a.edges.rt={path:[[1,g],[0,t]],move:{x:-1,y:0,enter:"rt"}}),o.polygons&&a.polygons.push([[0,t],[0,1],[1,1],[1,g]])},tetragon_r:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[g,0],[t,1]],move:{x:0,y:1,enter:"br"}}),o.polygons&&a.polygons.push([[g,0],[t,1],[1,1],[1,0]])},tetragon_b:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,g],[1,t]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[0,0],[0,g],[1,t],[1,0]])},tetragon_l:function(a,l,p,n,e,o){var g=o.interpolate(e,n,o.minV,o.maxV),t=o.interpolate(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.tl={path:[[g,1],[t,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,0],[0,1],[g,1],[t,0]])},tetragon_bl:function(a,l,p,n,e,o){var g=o.interpolate_a(l,p,o.minV,o.maxV),t=o.interpolate_b(l,p,o.minV,o.maxV),i=o.interpolate_a(l,e,o.minV,o.maxV),r=o.interpolate_b(l,e,o.minV,o.maxV);o.polygons_full&&(a.edges.bl={path:[[g,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},a.edges.lt={path:[[0,r],[t,0]],move:{x:0,y:-1,enter:"tr"}}),o.polygons&&a.polygons.push([[g,0],[0,i],[0,r],[t,0]])},tetragon_br:function(a,l,p,n,e,o){var g=o.interpolate_a(l,p,o.minV,o.maxV),t=o.interpolate_b(l,p,o.minV,o.maxV),i=o.interpolate_a(p,n,o.minV,o.maxV),r=o.interpolate_b(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.bl={path:[[g,0],[1,r]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,i],[t,0]],move:{x:0,y:-1,enter:"tr"}}),o.polygons&&a.polygons.push([[g,0],[1,r],[1,i],[t,0]])},tetragon_tr:function(a,l,p,n,e,o){var g=o.interpolate_a(e,n,o.minV,o.maxV),t=o.interpolate_b(e,n,o.minV,o.maxV),i=o.interpolate_b(p,n,o.minV,o.maxV),r=o.interpolate_a(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.rb={path:[[1,r],[g,1]],move:{x:0,y:1,enter:"bl"}},a.edges.tr={path:[[t,1],[1,i]],move:{x:1,y:0,enter:"lt"}}),o.polygons&&a.polygons.push([[1,r],[g,1],[t,1],[1,i]])},tetragon_tl:function(a,l,p,n,e,o){var g=o.interpolate_a(e,n,o.minV,o.maxV),t=o.interpolate_b(e,n,o.minV,o.maxV),i=o.interpolate_b(l,e,o.minV,o.maxV),r=o.interpolate_a(l,e,o.minV,o.maxV);o.polygons_full&&(a.edges.tr={path:[[t,1],[0,r]],move:{x:-1,y:0,enter:"rb"}},a.edges.lt={path:[[0,i],[g,1]],move:{x:0,y:1,enter:"bl"}}),o.polygons&&a.polygons.push([[t,1],[0,r],[0,i],[g,1]])},tetragon_lr:function(a,l,p,n,e,o){var g=o.interpolate_a(l,e,o.minV,o.maxV),t=o.interpolate_b(l,e,o.minV,o.maxV),i=o.interpolate_b(p,n,o.minV,o.maxV),r=o.interpolate_a(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.lt={path:[[0,t],[1,i]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,r],[0,g]],move:{x:-1,y:0,enter:"rb"}}),o.polygons&&a.polygons.push([[0,g],[0,t],[1,i],[1,r]])},tetragon_tb:function(a,l,p,n,e,o){var g=o.interpolate_a(e,n,o.minV,o.maxV),t=o.interpolate_b(e,n,o.minV,o.maxV),i=o.interpolate_b(l,p,o.minV,o.maxV),r=o.interpolate_a(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.tr={path:[[t,1],[i,0]],move:{x:0,y:-1,enter:"tr"}},a.edges.bl={path:[[r,0],[g,1]],move:{x:0,y:1,enter:"bl"}}),o.polygons&&a.polygons.push([[r,0],[g,1],[t,1],[i,0]])},pentagon_tr:function(a,l,p,n,e,o){var g=o.interpolate(e,n,o.minV,o.maxV),t=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.tl={path:[[g,1],[1,t]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[0,0],[0,1],[g,1],[1,t],[1,0]])},pentagon_tl:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,g],[t,1]],move:{x:0,y:1,enter:"br"}}),o.polygons&&a.polygons.push([[0,0],[0,g],[t,1],[1,1],[1,0]])},pentagon_br:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.rt={path:[[1,t],[g,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,0],[0,1],[1,1],[1,t],[g,0]])},pentagon_bl:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[t,0],[0,g]],move:{x:-1,y:0,enter:"rt"}}),o.polygons&&a.polygons.push([[0,g],[0,1],[1,1],[1,0],[t,0]])},pentagon_tr_rl:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate(e,n,o.minV,o.maxV),i=o.interpolate_b(p,n,o.minV,o.maxV),r=o.interpolate_a(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.tl={path:[[t,1],[1,i]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,r],[0,g]],move:{x:-1,y:0,enter:"rt"}}),o.polygons&&a.polygons.push([[0,g],[0,1],[t,1],[1,i],[1,r]])},pentagon_rb_bt:function(a,l,p,n,e,o){var g=o.interpolate(p,n,o.minV,o.maxV),t=o.interpolate_b(l,p,o.minV,o.maxV),i=o.interpolate_a(l,p,o.minV,o.maxV),r=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(a.edges.rt={path:[[1,g],[t,0]],move:{x:0,y:-1,enter:"tr"}},a.edges.bl={path:[[i,0],[r,1]],move:{x:0,y:1,enter:"br"}}),o.polygons&&a.polygons.push([[r,1],[1,1],[1,g],[t,0],[i,0]])},pentagon_bl_lr:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate_a(l,e,o.minV,o.maxV),i=o.interpolate_b(l,e,o.minV,o.maxV),r=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[g,0],[0,t]],move:{x:-1,y:0,enter:"rb"}},a.edges.lt={path:[[0,i],[1,r]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[g,0],[0,t],[0,i],[1,r],[1,0]])},pentagon_lt_tb:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate_a(e,n,o.minV,o.maxV),i=o.interpolate_b(e,n,o.minV,o.maxV),r=o.interpolate(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,g],[t,1]],move:{x:0,y:1,enter:"bl"}},a.edges.tr={path:[[i,1],[r,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,0],[0,g],[t,1],[i,1],[r,0]])},pentagon_bl_tb:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate(e,n,o.minV,o.maxV),i=o.interpolate_b(l,p,o.minV,o.maxV),r=o.interpolate_a(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.bl={path:[[r,0],[0,g]],move:{x:-1,y:0,enter:"rt"}},a.edges.tl={path:[[t,1],[i,0]],move:{x:0,y:-1,enter:"tr"}}),o.polygons&&a.polygons.push([[0,g],[0,1],[t,1],[i,0],[r,0]])},pentagon_lt_rl:function(a,l,p,n,e,o){var g=o.interpolate_a(l,e,o.minV,o.maxV),t=o.interpolate_b(l,e,o.minV,o.maxV),i=o.interpolate(e,n,o.minV,o.maxV),r=o.interpolate(p,e,o.minV,o.maxV);o.polygons_full&&(a.edges.lt={path:[[0,t],[i,1]],move:{x:0,y:1,enter:"br"}},a.edges.rt={path:[[1,r],[0,g]],move:{x:-1,y:0,enter:"rb"}}),o.polygons&&a.polygons.push([[0,g],[0,t],[i,1],[1,1],[1,r]])},pentagon_tr_bt:function(a,l,p,n,e,o){var g=o.interpolate_a(e,n,o.minV,o.maxV),t=o.interpolate_b(e,n,o.minV,o.maxV),i=o.interpolate(p,n,o.minV,o.maxV),r=o.interpolate(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[r,0],[g,1]],move:{x:0,y:1,enter:"bl"}},a.edges.tr={path:[[t,1],[1,i]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[g,1],[t,1],[1,i],[1,0],[r,0]])},pentagon_rb_lr:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate_b(p,n,o.minV,o.maxV),i=o.interpolate_a(p,n,o.minV,o.maxV),r=o.interpolate(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,g],[1,t]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,i],[r,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,0],[0,g],[1,t],[1,i],[r,0]])},hexagon_lt_tr:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate_a(e,n,o.minV,o.maxV),i=o.interpolate_b(e,n,o.minV,o.maxV),r=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,g],[t,1]],move:{x:0,y:1,enter:"bl"}},a.edges.tr={path:[[i,1],[1,r]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[0,0],[0,g],[t,1],[i,1],[1,r],[1,0]])},hexagon_bl_lt:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate_a(l,e,o.minV,o.maxV),i=o.interpolate_b(l,e,o.minV,o.maxV),r=o.interpolate(e,n,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[g,0],[0,t]],move:{x:-1,y:0,enter:"rb"}},a.edges.lt={path:[[0,i],[r,1]],move:{x:0,y:1,enter:"br"}}),o.polygons&&a.polygons.push([[g,0],[0,t],[0,i],[r,1],[1,1],[1,0]])},hexagon_bl_rb:function(a,l,p,n,e,o){var g=o.interpolate_a(l,p,o.minV,o.maxV),t=o.interpolate_b(l,p,o.minV,o.maxV),i=o.interpolate(l,e,o.minV,o.maxV),r=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.bl={path:[[g,0],[0,i]],move:{x:-1,y:0,enter:"rt"}},a.edges.rt={path:[[1,r],[t,0]],move:{x:0,y:-1,enter:"tr"}}),o.polygons&&a.polygons.push([[g,0],[0,i],[0,1],[1,1],[1,r],[t,0]])},hexagon_tr_rb:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate(e,n,o.minV,o.maxV),i=o.interpolate_b(p,n,o.minV,o.maxV),r=o.interpolate_a(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.tl={path:[[t,1],[1,i]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,r],[g,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,0],[0,1],[t,1],[1,i],[1,r],[g,0]])},hexagon_lt_rb:function(a,l,p,n,e,o){var g=o.interpolate(l,e,o.minV,o.maxV),t=o.interpolate(e,n,o.minV,o.maxV),i=o.interpolate(p,n,o.minV,o.maxV),r=o.interpolate(l,p,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,g],[t,1]],move:{x:0,y:1,enter:"br"}},a.edges.rt={path:[[1,i],[r,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,0],[0,g],[t,1],[1,1],[1,i],[r,0]])},hexagon_bl_tr:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate(l,e,o.minV,o.maxV),i=o.interpolate(e,n,o.minV,o.maxV),r=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[g,0],[0,t]],move:{x:-1,y:0,enter:"rt"}},a.edges.tl={path:[[i,1],[1,r]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[g,0],[0,t],[0,1],[i,1],[1,r],[1,0]])},heptagon_tr:function(a,l,p,n,e,o){var g=o.interpolate_a(l,p,o.minV,o.maxV),t=o.interpolate_b(l,p,o.minV,o.maxV),i=o.interpolate_a(l,e,o.minV,o.maxV),r=o.interpolate_b(l,e,o.minV,o.maxV),s=o.interpolate(e,n,o.minV,o.maxV),m=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.bl={path:[[g,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},a.edges.lt={path:[[0,r],[s,1]],move:{x:0,y:1,enter:"br"}},a.edges.rt={path:[[1,m],[t,0]],move:{x:0,y:-1,enter:"tr"}}),o.polygons&&a.polygons.push([[g,0],[0,i],[0,r],[s,1],[1,1],[1,m],[t,0]])},heptagon_bl:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate(l,e,o.minV,o.maxV),i=o.interpolate_a(e,n,o.minV,o.maxV),r=o.interpolate_b(e,n,o.minV,o.maxV),s=o.interpolate_b(p,n,o.minV,o.maxV),m=o.interpolate_a(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.lb={path:[[0,t],[i,1]],move:{x:0,y:1,enter:"bl"}},a.edges.tr={path:[[r,1],[1,s]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,m],[g,0]],move:{x:0,y:-1,enter:"tl"}}),o.polygons&&a.polygons.push([[0,0],[0,t],[i,1],[r,1],[1,s],[1,m],[g,0]])},heptagon_tl:function(a,l,p,n,e,o){var g=o.interpolate_a(l,p,o.minV,o.maxV),t=o.interpolate_b(l,p,o.minV,o.maxV),i=o.interpolate(l,e,o.minV,o.maxV),r=o.interpolate(e,n,o.minV,o.maxV),s=o.interpolate_b(p,n,o.minV,o.maxV),m=o.interpolate_a(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.bl={path:[[g,0],[0,i]],move:{x:-1,y:0,enter:"rt"}},a.edges.tl={path:[[r,1],[1,s]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,m],[t,0]],move:{x:0,y:-1,enter:"tr"}}),o.polygons&&a.polygons.push([[g,0],[0,i],[0,1],[r,1],[1,s],[1,m],[t,0]])},heptagon_br:function(a,l,p,n,e,o){var g=o.interpolate(l,p,o.minV,o.maxV),t=o.interpolate_a(l,e,o.minV,o.maxV),i=o.interpolate_b(l,e,o.minV,o.maxV),r=o.interpolate_a(e,n,o.minV,o.maxV),s=o.interpolate_b(e,n,o.minV,o.maxV),m=o.interpolate(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.br={path:[[g,0],[0,t]],move:{x:-1,y:0,enter:"rb"}},a.edges.lt={path:[[0,i],[r,1]],move:{x:0,y:1,enter:"bl"}},a.edges.tr={path:[[s,1],[1,m]],move:{x:1,y:0,enter:"lb"}}),o.polygons&&a.polygons.push([[g,0],[0,t],[0,i],[r,1],[s,1],[1,m],[1,0]])},octagon:function(a,l,p,n,e,o){var g=o.interpolate_a(l,p,o.minV,o.maxV),t=o.interpolate_b(l,p,o.minV,o.maxV),i=o.interpolate_a(l,e,o.minV,o.maxV),r=o.interpolate_b(l,e,o.minV,o.maxV),s=o.interpolate_a(e,n,o.minV,o.maxV),m=o.interpolate_b(e,n,o.minV,o.maxV),b=o.interpolate_b(p,n,o.minV,o.maxV),c=o.interpolate_a(p,n,o.minV,o.maxV);o.polygons_full&&(a.edges.bl={path:[[g,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},a.edges.lt={path:[[0,r],[s,1]],move:{x:0,y:1,enter:"bl"}},a.edges.tr={path:[[m,1],[1,b]],move:{x:1,y:0,enter:"lt"}},a.edges.rb={path:[[1,c],[t,0]],move:{x:0,y:-1,enter:"tr"}}),o.polygons&&a.polygons.push([[g,0],[0,i],[0,r],[s,1],[m,1],[1,b],[1,c],[t,0]])}};function $(a,l,p,n){var e,o,g,t=!1,i=null,r=null,s=null,m=null,b=!1,c=[],y=[],u=[];if(!a)throw new Error("data is required");if(l==null)throw new Error("lowerBound is required");if(p==null)throw new Error("bandWidth is required");if(n&&typeof n!="object")throw new Error("options must be an object");if(g=K(n),a instanceof N)i=a,r=a.root,s=a.data,g.noQuadTree||(t=!0);else if(Array.isArray(a)&&Array.isArray(a[0]))s=a;else throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");if(Array.isArray(l)){for(b=!0,g.noQuadTree||(t=!0),e=0;e<l.length;e++)if(isNaN(+l[e]))throw new Error("lowerBound["+e+"] is not a number");if(Array.isArray(p)){if(l.length!==p.length)throw new Error("lowerBound and bandWidth have unequal lengths");for(e=0;e<p.length;e++)if(isNaN(+p[e]))throw new Error("bandWidth["+e+"] is not a number")}else{if(isNaN(+p))throw new Error("bandWidth must be a number");for(c=[],e=0;e<l.length;e++)c.push(p);p=c}}else{if(isNaN(+l))throw new Error("lowerBound must be a number");if(l=[l],isNaN(+p))throw new Error("bandWidth must be a number");p=[p]}return t&&!r&&(i=new N(s),r=i.root,s=i.data),g.verbose&&(g.polygons?console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"):console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),b&&console.log("MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band")),l.forEach(function(_,V){if(y=[],g.minV=_,g.maxV=_+p[V],g.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+_+":"+(_+p[V])+"]"),g.polygons)if(t)r.cellsInBand(g.minV,g.maxV,!0).forEach(function(f){y=y.concat(C(M(s,f.x,f.y,g),f.x,f.y,g))});else for(o=0;o<s.length-1;++o)for(e=0;e<s[0].length-1;++e)y=y.concat(C(M(s,e,o,g),e,o,g));else{for(m=[],e=0;e<s[0].length-1;++e)m[e]=[];if(t)r.cellsInBand(g.minV,g.maxV,!1).forEach(function(f){m[f.x][f.y]=M(s,f.x,f.y,g)});else for(e=0;e<s[0].length-1;++e)for(o=0;o<s.length-1;++o)m[e][o]=M(s,e,o,g);y=Y(s,m,g)}b?u.push(y):u=y,typeof g.successCallback=="function"&&g.successCallback(u,_,p[V])}),u}function x(a,l,p,n,e,o){var g=(n+p+l+a)/4;return g>o?2:g<e?0:1}function M(a,l,p,n){var e,o,g=0,t=a[p+1][l],i=a[p+1][l+1],r=a[p][l+1],s=a[p][l],m=n.minV,b=n.maxV;if(!(isNaN(s)||isNaN(r)||isNaN(i)||isNaN(t))){switch(g|=t<m?0:t>b?128:64,g|=i<m?0:i>b?32:16,g|=r<m?0:r>b?8:4,g|=s<m?0:s>b?2:1,g=+g,o=0,e={cval:g,polygons:[],edges:{},x0:s,x1:r,x2:i,x3:t,x:l,y:p},g){case 85:h.square(e,s,r,i,t,n);case 0:case 170:break;case 169:h.triangle_bl(e,s,r,i,t,n);break;case 166:h.triangle_br(e,s,r,i,t,n);break;case 154:h.triangle_tr(e,s,r,i,t,n);break;case 106:h.triangle_tl(e,s,r,i,t,n);break;case 1:h.triangle_bl(e,s,r,i,t,n);break;case 4:h.triangle_br(e,s,r,i,t,n);break;case 16:h.triangle_tr(e,s,r,i,t,n);break;case 64:h.triangle_tl(e,s,r,i,t,n);break;case 168:h.tetragon_bl(e,s,r,i,t,n);break;case 162:h.tetragon_br(e,s,r,i,t,n);break;case 138:h.tetragon_tr(e,s,r,i,t,n);break;case 42:h.tetragon_tl(e,s,r,i,t,n);break;case 2:h.tetragon_bl(e,s,r,i,t,n);break;case 8:h.tetragon_br(e,s,r,i,t,n);break;case 32:h.tetragon_tr(e,s,r,i,t,n);break;case 128:h.tetragon_tl(e,s,r,i,t,n);break;case 5:h.tetragon_b(e,s,r,i,t,n);break;case 20:h.tetragon_r(e,s,r,i,t,n);break;case 80:h.tetragon_t(e,s,r,i,t,n);break;case 65:h.tetragon_l(e,s,r,i,t,n);break;case 165:h.tetragon_b(e,s,r,i,t,n);break;case 150:h.tetragon_r(e,s,r,i,t,n);break;case 90:h.tetragon_t(e,s,r,i,t,n);break;case 105:h.tetragon_l(e,s,r,i,t,n);break;case 160:h.tetragon_lr(e,s,r,i,t,n);break;case 130:h.tetragon_tb(e,s,r,i,t,n);break;case 10:h.tetragon_lr(e,s,r,i,t,n);break;case 40:h.tetragon_tb(e,s,r,i,t,n);break;case 101:h.pentagon_tr(e,s,r,i,t,n);break;case 149:h.pentagon_tl(e,s,r,i,t,n);break;case 86:h.pentagon_bl(e,s,r,i,t,n);break;case 89:h.pentagon_br(e,s,r,i,t,n);break;case 69:h.pentagon_tr(e,s,r,i,t,n);break;case 21:h.pentagon_tl(e,s,r,i,t,n);break;case 84:h.pentagon_bl(e,s,r,i,t,n);break;case 81:h.pentagon_br(e,s,r,i,t,n);break;case 96:h.pentagon_tr_rl(e,s,r,i,t,n);break;case 24:h.pentagon_rb_bt(e,s,r,i,t,n);break;case 6:h.pentagon_bl_lr(e,s,r,i,t,n);break;case 129:h.pentagon_lt_tb(e,s,r,i,t,n);break;case 74:h.pentagon_tr_rl(e,s,r,i,t,n);break;case 146:h.pentagon_rb_bt(e,s,r,i,t,n);break;case 164:h.pentagon_bl_lr(e,s,r,i,t,n);break;case 41:h.pentagon_lt_tb(e,s,r,i,t,n);break;case 66:h.pentagon_bl_tb(e,s,r,i,t,n);break;case 144:h.pentagon_lt_rl(e,s,r,i,t,n);break;case 36:h.pentagon_tr_bt(e,s,r,i,t,n);break;case 9:h.pentagon_rb_lr(e,s,r,i,t,n);break;case 104:h.pentagon_bl_tb(e,s,r,i,t,n);break;case 26:h.pentagon_lt_rl(e,s,r,i,t,n);break;case 134:h.pentagon_tr_bt(e,s,r,i,t,n);break;case 161:h.pentagon_rb_lr(e,s,r,i,t,n);break;case 37:h.hexagon_lt_tr(e,s,r,i,t,n);break;case 148:h.hexagon_bl_lt(e,s,r,i,t,n);break;case 82:h.hexagon_bl_rb(e,s,r,i,t,n);break;case 73:h.hexagon_tr_rb(e,s,r,i,t,n);break;case 133:h.hexagon_lt_tr(e,s,r,i,t,n);break;case 22:h.hexagon_bl_lt(e,s,r,i,t,n);break;case 88:h.hexagon_bl_rb(e,s,r,i,t,n);break;case 97:h.hexagon_tr_rb(e,s,r,i,t,n);break;case 145:h.hexagon_lt_rb(e,s,r,i,t,n);break;case 25:h.hexagon_lt_rb(e,s,r,i,t,n);break;case 70:h.hexagon_bl_tr(e,s,r,i,t,n);break;case 100:h.hexagon_bl_tr(e,s,r,i,t,n);break;case 17:o=x(s,r,i,t,m,b),o===0?(h.triangle_bl(e,s,r,i,t,n),h.triangle_tr(e,s,r,i,t,n)):h.hexagon_lt_rb(e,s,r,i,t,n);break;case 68:o=x(s,r,i,t,m,b),o===0?(h.triangle_tl(e,s,r,i,t,n),h.triangle_br(e,s,r,i,t,n)):h.hexagon_bl_tr(e,s,r,i,t,n);break;case 153:o=x(s,r,i,t,m,b),o===2?(h.triangle_bl(e,s,r,i,t,n),h.triangle_tr(e,s,r,i,t,n)):h.hexagon_lt_rb(e,s,r,i,t,n);break;case 102:o=x(s,r,i,t,m,b),o===2?(h.triangle_tl(e,s,r,i,t,n),h.triangle_br(e,s,r,i,t,n)):h.hexagon_bl_tr(e,s,r,i,t,n);break;case 152:o=x(s,r,i,t,m,b),o===2?(h.triangle_tr(e,s,r,i,t,n),h.tetragon_bl(e,s,r,i,t,n)):h.heptagon_tr(e,s,r,i,t,n);break;case 137:o=x(s,r,i,t,m,b),o===2?(h.triangle_bl(e,s,r,i,t,n),h.tetragon_tr(e,s,r,i,t,n)):h.heptagon_bl(e,s,r,i,t,n);break;case 98:o=x(s,r,i,t,m,b),o===2?(h.triangle_tl(e,s,r,i,t,n),h.tetragon_br(e,s,r,i,t,n)):h.heptagon_tl(e,s,r,i,t,n);break;case 38:o=x(s,r,i,t,m,b),o===2?(h.triangle_br(e,s,r,i,t,n),h.tetragon_tl(e,s,r,i,t,n)):h.heptagon_br(e,s,r,i,t,n);break;case 18:o=x(s,r,i,t,m,b),o===0?(h.triangle_tr(e,s,r,i,t,n),h.tetragon_bl(e,s,r,i,t,n)):h.heptagon_tr(e,s,r,i,t,n);break;case 33:o=x(s,r,i,t,m,b),o===0?(h.triangle_bl(e,s,r,i,t,n),h.tetragon_tr(e,s,r,i,t,n)):h.heptagon_bl(e,s,r,i,t,n);break;case 72:o=x(s,r,i,t,m,b),o===0?(h.triangle_tl(e,s,r,i,t,n),h.tetragon_br(e,s,r,i,t,n)):h.heptagon_tl(e,s,r,i,t,n);break;case 132:o=x(s,r,i,t,m,b),o===0?(h.triangle_br(e,s,r,i,t,n),h.tetragon_tl(e,s,r,i,t,n)):h.heptagon_br(e,s,r,i,t,n);break;case 136:o=x(s,r,i,t,m,b),o===0?(h.tetragon_tl(e,s,r,i,t,n),h.tetragon_br(e,s,r,i,t,n)):o===1?h.octagon(e,s,r,i,t,n):(h.tetragon_bl(e,s,r,i,t,n),h.tetragon_tr(e,s,r,i,t,n));break;case 34:o=x(s,r,i,t,m,b),o===0?(h.tetragon_bl(e,s,r,i,t,n),h.tetragon_tr(e,s,r,i,t,n)):o===1?h.octagon(e,s,r,i,t,n):(h.tetragon_tl(e,s,r,i,t,n),h.tetragon_br(e,s,r,i,t,n));break}return e}}export{N as QuadTree,$ as isoBands,W as isoContours,W as isoLines,N as quadTree};
