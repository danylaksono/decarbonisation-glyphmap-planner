import{bbox as L}from"../bbox@7.1.0/index.js";import{booleanPointInPolygon as nt}from"../boolean-point-in-polygon@7.1.0/index.js";import{distance as b}from"../distance@7.1.0/index.js";import{transformScale as ot}from"../transform-scale@7.1.0/index.js";import{cleanCoords as et}from"../clean-coords@7.1.0/index.js";import{bboxPolygon as it}from"../bbox-polygon@7.1.0/index.js";import{getCoord as Q,getGeom as st}from"../invariant@7.1.0/index.js";import{isObject as rt,featureCollection as R,isNumber as ht,point as O,lineString as T,feature as ut}from"../helpers@7.1.0/index.js";function V(t){for(var o=t,n=[];o.parent;)n.unshift(o),o=o.parent;return n}function ct(){return new X(function(t){return t.f})}var F={search:function(t,o,n,e){var i;t.cleanDirty(),e=e||{};var r=e.heuristic||F.heuristics.manhattan,h=(i=e.closest)!=null?i:!1,u=ct(),f=o;for(o.h=r(o,n),u.push(o);u.size()>0;){var c=u.pop();if(c===n)return V(c);c.closed=!0;for(var a=t.neighbors(c),l=0,p=a.length;l<p;++l){var s=a[l];if(!(s.closed||s.isWall())){var g=c.g+s.getCost(c),d=s.visited;(!d||g<s.g)&&(s.visited=!0,s.parent=c,s.h=s.h||r(s,n),s.g=g,s.f=s.g+s.h,t.markDirty(s),h&&(s.h<f.h||s.h===f.h&&s.g<f.g)&&(f=s),d?u.rescoreElement(s):u.push(s))}}}return h?V(f):[]},heuristics:{manhattan:function(t,o){var n=Math.abs(o.x-t.x),e=Math.abs(o.y-t.y);return n+e},diagonal:function(t,o){var n=1,e=Math.sqrt(2),i=Math.abs(o.x-t.x),r=Math.abs(o.y-t.y);return n*(i+r)+(e-2*n)*Math.min(i,r)}},cleanNode:function(t){t.f=0,t.g=0,t.h=0,t.visited=!1,t.closed=!1,t.parent=null}};function y(t,o){o=o||{},this.nodes=[],this.diagonal=!!o.diagonal,this.grid=[];for(var n=0;n<t.length;n++){this.grid[n]=[];for(var e=0,i=t[n];e<i.length;e++){var r=new N(n,e,i[e]);this.grid[n][e]=r,this.nodes.push(r)}}this.init()}y.prototype.init=function(){this.dirtyNodes=[];for(var t=0;t<this.nodes.length;t++)F.cleanNode(this.nodes[t])},y.prototype.cleanDirty=function(){for(var t=0;t<this.dirtyNodes.length;t++)F.cleanNode(this.dirtyNodes[t]);this.dirtyNodes=[]},y.prototype.markDirty=function(t){this.dirtyNodes.push(t)},y.prototype.neighbors=function(t){var o=[],n=t.x,e=t.y,i=this.grid;return i[n-1]&&i[n-1][e]&&o.push(i[n-1][e]),i[n+1]&&i[n+1][e]&&o.push(i[n+1][e]),i[n]&&i[n][e-1]&&o.push(i[n][e-1]),i[n]&&i[n][e+1]&&o.push(i[n][e+1]),this.diagonal&&(i[n-1]&&i[n-1][e-1]&&o.push(i[n-1][e-1]),i[n+1]&&i[n+1][e-1]&&o.push(i[n+1][e-1]),i[n-1]&&i[n-1][e+1]&&o.push(i[n-1][e+1]),i[n+1]&&i[n+1][e+1]&&o.push(i[n+1][e+1])),o},y.prototype.toString=function(){for(var t=[],o=this.grid,n,e,i,r,h=0,u=o.length;h<u;h++){for(n=[],e=o[h],i=0,r=e.length;i<r;i++)n.push(e[i].weight);t.push(n.join(" "))}return t.join(`
`)};function N(t,o,n){this.x=t,this.y=o,this.weight=n}N.prototype.toString=function(){return"["+this.x+" "+this.y+"]"},N.prototype.getCost=function(t){return t&&t.x!==this.x&&t.y!==this.y?this.weight*1.41421:this.weight},N.prototype.isWall=function(){return this.weight===0};function X(t){this.content=[],this.scoreFunction=t}X.prototype={push:function(t){this.content.push(t),this.sinkDown(this.content.length-1)},pop:function(){var t=this.content[0],o=this.content.pop();return this.content.length>0&&(this.content[0]=o,this.bubbleUp(0)),t},remove:function(t){var o=this.content.indexOf(t),n=this.content.pop();o!==this.content.length-1&&(this.content[o]=n,this.scoreFunction(n)<this.scoreFunction(t)?this.sinkDown(o):this.bubbleUp(o))},size:function(){return this.content.length},rescoreElement:function(t){this.sinkDown(this.content.indexOf(t))},sinkDown:function(t){for(var o=this.content[t];t>0;){var n=(t+1>>1)-1,e=this.content[n];if(this.scoreFunction(o)<this.scoreFunction(e))this.content[n]=o,this.content[t]=e,t=n;else break}},bubbleUp:function(t){for(var o=this.content.length,n=this.content[t],e=this.scoreFunction(n);;){var i=t+1<<1,r=i-1,h=null,u;if(r<o){var f=this.content[r];u=this.scoreFunction(f),u<e&&(h=r)}if(i<o){var c=this.content[i],a=this.scoreFunction(c);a<(h===null?e:u)&&(h=i)}if(h!==null)this.content[t]=this.content[h],this.content[h]=n,t=h;else break}}};function Z(t,o,n={}){if(n=n||{},!rt(n))throw new Error("options is invalid");let e=n.obstacles||R([]),i=n.resolution||100;if(!t)throw new Error("start is required");if(!o)throw new Error("end is required");if(i&&(!ht(i)||i<=0))throw new Error("options.resolution must be a number, greater than 0");const r=Q(t),h=Q(o);if(t=O(r),o=O(h),e.type==="FeatureCollection"){if(e.features.length===0)return T([r,h])}else if(e.type==="Polygon")e=R([ut(st(e))]);else throw new Error("invalid obstacles");const u=e;u.features.push(t),u.features.push(o);const f=L(ot(it(L(u)),1.15)),[c,a,l,p]=f,s=b([c,a],[l,a],n)/i;u.features.pop(),u.features.pop();const g=s/b([c,a],[l,a],n)*(l-c),d=s/b([c,a],[c,p],n)*(p-a),U=l-c,j=p-a,_=Math.floor(U/g),$=Math.floor(j/d),A=(U-_*g)/2,B=(j-$*d)/2,z=[],W=[];let k,D,G=1/0,I=1/0,w=p-B,E=0;for(;w>=a;){const v=[],m=[];let x=c+A,P=0;for(;x<=l;){const S=O([x,w]),q=at(S,e);v.push(q?0:1),m.push(x+"|"+w);const H=b(S,t);!q&&H<G&&(G=H,k={x:P,y:E});const K=b(S,o);!q&&K<I&&(I=K,D={x:P,y:E}),x+=g,P++}W.push(v),z.push(m),w-=d,E++}const M=new y(W,{diagonal:!0}),J=M.grid[k.y][k.x],Y=M.grid[D.y][D.x],tt=F.search(M,J,Y),C=[r];return tt.forEach(function(v){const m=z[v.x][v.y].split("|");C.push([+m[0],+m[1]])}),C.push(h),et(T(C))}function at(t,o){for(let n=0;n<o.features.length;n++)if(nt(t,o.features[n]))return!0;return!1}var ft=Z;export{ft as default,Z as shortestPath};
