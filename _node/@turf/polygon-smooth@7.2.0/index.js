import{polygon as y,multiPolygon as g,featureCollection as P}from"../helpers@7.2.0/index.js";import{geomEach as d,coordEach as m}from"../meta@7.2.0/index.js";function E(l,t){t=t||{},t.iterations=t.iterations||1;const{iterations:r}=t,u=[];if(!l)throw new Error("inputPolys is required");return d(l,function(e,s,p){if(e.type==="Polygon"){let f=[[]];for(let o=0;o<r;o++){let n=[],i=e;o>0&&(i=y(f).geometry),w(i,n),f=n.slice(0)}u.push(y(f,p))}else if(e.type==="MultiPolygon"){let f=[[[]]];for(let o=0;o<r;o++){let n=[],i=e;o>0&&(i=g(f).geometry),v(i,n),f=n.slice(0)}u.push(g(f,p))}else throw new Error("geometry is invalid, must be Polygon or MultiPolygon")}),P(u)}function w(l,t){var r,u;m(l,function(e,s,p,f,o){if(u!==o)t.push([]);else{var n=r[0],i=r[1],a=e[0],c=e[1];t[o].push([.75*n+.25*a,.75*i+.25*c]),t[o].push([.25*n+.75*a,.25*i+.75*c])}r=e,u=o},!1),t.forEach(function(e){e.push(e[0])})}function v(l,t){let r,u,e;m(l,function(s,p,f,o,n){if(u!==o)t.push([[]]);else if(e!==n)t[o].push([]);else{var i=r[0],a=r[1],c=s[0],h=s[1];t[o][n].push([.75*i+.25*c,.75*a+.25*h]),t[o][n].push([.25*i+.75*c,.25*a+.75*h])}r=s,u=o,e=n},!1),t.forEach(function(s){s.forEach(function(p){p.push(p[0])})})}var M=E;export{M as default,E as polygonSmooth};
