import{distance as q}from"../distance@7.1.0/index.js";import{intersect as C}from"../intersect@7.1.0/index.js";import{featureCollection as v,polygon as F}from"../helpers@7.1.0/index.js";function H(s,i,o={}){const f=JSON.stringify(o.properties||{}),[e,n,r,t]=s,p=(n+t)/2,m=(e+r)/2,k=i*2/q([e,p],[r,p],o)*(r-e),d=i*2/q([m,n],[m,t],o)*(t-n),M=k/2,g=M*2,c=Math.sqrt(3)/2*d,E=r-e,J=t-n,N=3/4*g,T=c,W=(E-g)/(g-M/2),G=Math.floor(W),X=(G*N-M/2-E)/2-M/2+N/2,O=Math.floor((J-c)/c);let I=(J-O*c)/2;const P=O*c-J>c/2;P&&(I-=c/4);const S=[],x=[];for(let h=0;h<6;h++){const a=2*Math.PI/6*h;S.push(Math.cos(a)),x.push(Math.sin(a))}const l=[];for(let h=0;h<=G;h++)for(let a=0;a<=O;a++){const b=h%2===1;if(a===0&&b||a===0&&P)continue;const j=h*N+e-X;let y=a*T+n+I;if(b&&(y-=c/2),o.triangles===!0)w([j,y],k/2,d/2,JSON.parse(f),S,x).forEach(function(u){o.mask?C(v([o.mask,u]))&&l.push(u):l.push(u)});else{const u=_([j,y],k/2,d/2,JSON.parse(f),S,x);o.mask?C(v([o.mask,u]))&&l.push(u):l.push(u)}}return v(l)}function _(s,i,o,f,e,n){const r=[];for(let t=0;t<6;t++){const p=s[0]+i*e[t],m=s[1]+o*n[t];r.push([p,m])}return r.push(r[0].slice()),F([r],f)}function w(s,i,o,f,e,n){const r=[];for(let t=0;t<6;t++){const p=[];p.push(s),p.push([s[0]+i*e[t],s[1]+o*n[t]]),p.push([s[0]+i*e[(t+1)%6],s[1]+o*n[(t+1)%6]]),p.push(s),r.push(F([p],f))}return r}var z=H;export{z as default,H as hexGrid};
