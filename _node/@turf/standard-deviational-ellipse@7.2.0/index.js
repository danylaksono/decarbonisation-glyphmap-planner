import{coordAll as C,featureEach as j}from"../meta@7.2.0/index.js";import{getCoords as l}from"../invariant@7.2.0/index.js";import{isObject as q,isNumber as I,featureCollection as S}from"../helpers@7.2.0/index.js";import{centerMean as k}from"../center-mean@7.2.0/index.js";import{pointsWithinPolygon as z}from"../points-within-polygon@7.2.0/index.js";import{ellipse as B}from"../ellipse@7.2.0/index.js";function D(r,t){var c;if(t=t||{},!q(t))throw new Error("options is invalid");const M=t.steps||64,s=t.weight,f=t.properties||{};if(!I(M))throw new Error("steps must be a number");if(!q(f))throw new Error("properties must be a number");const w=C(r).length,h=k(r,{weight:s});let d=0,g=0,m=0;j(r,function(a){var p;const o=s&&((p=a.properties)==null?void 0:p[s])||1,e=O(l(a),l(h));d+=Math.pow(e.x,2)*o,g+=Math.pow(e.y,2)*o,m+=e.x*e.y*o});const v=d-g,P=Math.sqrt(Math.pow(v,2)+4*Math.pow(m,2)),W=2*m,i=Math.atan((v+P)/W),x=i*180/Math.PI;let b=0,E=0,u=0;j(r,function(a){var p;const o=s&&((p=a.properties)==null?void 0:p[s])||1,e=O(l(a),l(h));b+=Math.pow(e.x*Math.cos(i)-e.y*Math.sin(i),2)*o,E+=Math.pow(e.x*Math.sin(i)+e.y*Math.cos(i),2)*o,u+=o});const y=Math.sqrt(2*b/u),A=Math.sqrt(2*E/u),n=B(h,y,A,{units:"degrees",angle:x,steps:M,properties:f}),N=z(r,S([n])),F={meanCenterCoordinates:l(h),semiMajorAxis:y,semiMinorAxis:A,numberOfFeatures:w,angle:x,percentageWithinEllipse:100*C(N).length/w};return n.properties=(c=n.properties)!=null?c:{},n.properties.standardDeviationalEllipse=F,n}function O(r,t){return{x:r[0]-t[0],y:r[1]-t[1]}}var G=D;export{G as default,D as standardDeviationalEllipse};
