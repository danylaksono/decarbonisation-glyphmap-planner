import{centerMean as M}from"../center-mean@7.2.0/index.js";import{distance as y}from"../distance@7.2.0/index.js";import{centroid as x}from"../centroid@7.2.0/index.js";import{isObject as N,isNumber as g,featureCollection as j,point as O}from"../helpers@7.2.0/index.js";import{featureEach as v}from"../meta@7.2.0/index.js";function b(a,r={}){if(r=r||{},!N(r))throw new Error("options is invalid");var i=r.counter||10;if(!g(i))throw new Error("counter must be a number");var e=r.weight,u=M(a,{weight:r.weight}),n=j([]);v(a,function(s){var t;n.features.push(x(s,{properties:{weight:(t=s.properties)==null?void 0:t[e]}}))});const m={tolerance:r.tolerance,medianCandidates:[]};return E(u.geometry.coordinates,[0,0],n,m,i)}function E(a,r,i,e,u){var n=e.tolerance||.001,m=0,s=0,t=0,p=0;if(v(i,function(f){var w,C=(w=f.properties)==null?void 0:w.weight,o=C??1;if(o=Number(o),!g(o))throw new Error("weight value must be a number");if(o>0){p+=1;var h=o*y(f,a);h===0&&(h=1);var l=o/h;m+=f.geometry.coordinates[0]*l,s+=f.geometry.coordinates[1]*l,t+=l}}),p<1)throw new Error("no features to measure");var d=m/t,c=s/t;return p===1||u===0||Math.abs(d-r[0])<n&&Math.abs(c-r[1])<n?O([d,c],{medianCandidates:e.medianCandidates}):(e.medianCandidates.push([d,c]),E([d,c],a,i,e,u-1))}var _=b;export{b as centerMedian,_ as default};
