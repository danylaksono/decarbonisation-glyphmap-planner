import{point as h}from"../helpers@7.2.0/index.js";function L(u){let o,n;const c={type:"FeatureCollection",features:[]};if(u.type==="Feature"?n=u.geometry:n=u,n.type==="LineString")o=[n.coordinates];else if(n.type==="MultiLineString")o=n.coordinates;else if(n.type==="MultiPolygon")o=[].concat(...n.coordinates);else if(n.type==="Polygon")o=n.coordinates;else throw new Error("Input must be a LineString, MultiLineString, Polygon, or MultiPolygon Feature or Geometry");return o.forEach(t=>{o.forEach(r=>{for(let e=0;e<t.length-1;e++)for(let i=e;i<r.length-1;i++){if(t===r&&(Math.abs(e-i)===1||e===0&&i===t.length-2&&t[e][0]===t[t.length-1][0]&&t[e][1]===t[t.length-1][1]))continue;const a=f(t[e][0],t[e][1],t[e+1][0],t[e+1][1],r[i][0],r[i][1],r[i+1][0],r[i+1][1]);a&&c.features.push(h([a[0],a[1]]))}})}),c}function f(u,o,n,c,t,r,e,i){let a,s,g,y,p;const l={x:null,y:null,onLine1:!1,onLine2:!1};return a=(i-r)*(n-u)-(e-t)*(c-o),a===0?l.x!==null&&l.y!==null?l:!1:(s=o-r,g=u-t,y=(e-t)*s-(i-r)*g,p=(n-u)*s-(c-o)*g,s=y/a,g=p/a,l.x=u+s*(n-u),l.y=o+s*(c-o),s>=0&&s<=1&&(l.onLine1=!0),g>=0&&g<=1&&(l.onLine2=!0),l.onLine1&&l.onLine2?[l.x,l.y]:!1)}var m=L;export{m as default,L as kinks};
