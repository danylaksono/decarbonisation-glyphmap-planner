import{isObject as m,multiPolygon as l,featureCollection as y}from"../helpers@7.1.0/index.js";import{collectionOf as h}from"../invariant@7.1.0/index.js";import{featureEach as d}from"../meta@7.1.0/index.js";import{flatten as a}from"../flatten@7.1.0/index.js";import c from"../../polygon-clipping@0.15.7/index.js";function u(p,e={}){if(e=e||{},!m(e))throw new Error("options is invalid");const{propertyName:t}=e;h(p,"Polygon","dissolve");const s=[];if(t){const r={};d(p,function(o){o.properties&&(Object.prototype.hasOwnProperty.call(r,o.properties[t])||(r[o.properties[t]]=[]),r[o.properties[t]].push(o))});const i=Object.keys(r);for(let o=0;o<i.length;o++){const n=l(c.union.apply(null,r[i[o]].map(function(f){return f.geometry.coordinates})));n&&n.properties&&(n.properties[t]=i[o],s.push(n))}}else return a(l(c.union.apply(null,p.features.map(function(r){return r.geometry.coordinates}))));return a(y(s))}var g=u;export{g as default,u as dissolve};
