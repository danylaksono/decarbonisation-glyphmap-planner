import{featureEach as p}from"../meta@7.1.0/index.js";import{featureCollection as c}from"../helpers@7.1.0/index.js";function v(e,r){if(!e)throw new Error("geojson is required");if(e.type!=="FeatureCollection")throw new Error("geojson must be a FeatureCollection");if(r==null)throw new Error("filter is required");var o=[];return p(e,function(t){s(t.properties,r)&&o.push(t)}),c(o)}function h(e,r,o){if(!e)throw new Error("geojson is required");if(e.type!=="FeatureCollection")throw new Error("geojson must be a FeatureCollection");if(r==null)throw new Error("property is required");for(var t=y(e,r),n=Object.keys(t),i=0;i<n.length;i++){for(var u=n[i],a=t[u],f=[],l=0;l<a.length;l++)f.push(e.features[a[l]]);o(c(f),u,i)}}function g(e,r,o,t){var n=t;return h(e,r,function(i,u,a){a===0&&t===void 0?n=i:n=o(n,i,u,a)}),n}function y(e,r){var o={};return p(e,function(t,n){var i=t.properties||{};if(Object.prototype.hasOwnProperty.call(i,String(r))){var u=i[r];Object.prototype.hasOwnProperty.call(o,u)?o[u].push(n):o[u]=[n]}}),o}function s(e,r){if(e===void 0)return!1;var o=typeof r;if(o==="number"||o==="string")return Object.prototype.hasOwnProperty.call(e,r);if(Array.isArray(r)){for(var t=0;t<r.length;t++)if(!s(e,r[t]))return!1;return!0}else return w(e,r)}function w(e,r){for(var o=Object.keys(r),t=0;t<o.length;t++){var n=o[t];if(e[n]!==r[n])return!1}return!0}function O(e,r){if(!r)return{};if(!r.length)return{};for(var o={},t=0;t<r.length;t++){var n=r[t];Object.prototype.hasOwnProperty.call(e,n)&&(o[n]=e[n])}return o}export{s as applyFilter,h as clusterEach,g as clusterReduce,y as createBins,O as filterProperties,v as getCluster,w as propertiesContainsFilter};
