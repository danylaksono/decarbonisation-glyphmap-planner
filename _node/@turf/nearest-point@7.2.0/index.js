import{clone as m}from"../clone@7.2.0/index.js";import{distance as O}from"../distance@7.2.0/index.js";import{featureEach as P}from"../meta@7.2.0/index.js";var d=Object.defineProperty,w=Object.defineProperties,y=Object.getOwnPropertyDescriptors,p=Object.getOwnPropertySymbols,j=Object.prototype.hasOwnProperty,v=Object.prototype.propertyIsEnumerable,s=(r,e,t)=>e in r?d(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,c=(r,e)=>{for(var t in e||(e={}))j.call(e,t)&&s(r,t,e[t]);if(p)for(var t of p(e))v.call(e,t)&&s(r,t,e[t]);return r},f=(r,e)=>w(r,y(e));function l(r,e,t={}){if(!r)throw new Error("targetPoint is required");if(!e)throw new Error("points is required");let o=1/0,i=0;P(e,(u,b)=>{const a=O(r,u,t);a<o&&(i=b,o=a)});const n=m(e.features[i]);return f(c({},n),{properties:f(c({},n.properties),{featureIndex:i,distanceToPoint:o})})}var g=l;export{g as default,l as nearestPoint};
