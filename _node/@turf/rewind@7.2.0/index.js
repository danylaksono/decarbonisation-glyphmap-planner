import{clone as g}from"../clone@7.2.0/index.js";import{booleanClockwise as u}from"../boolean-clockwise@7.2.0/index.js";import{featureEach as f,geomEach as m}from"../meta@7.2.0/index.js";import{getCoords as t}from"../invariant@7.2.0/index.js";import{isObject as v,featureCollection as E}from"../helpers@7.2.0/index.js";function p(e,o={}){var r,a;if(o=o||{},!v(o))throw new Error("options is invalid");const s=(r=o.mutate)!=null?r:!1,n=(a=o.reverse)!=null?a:!1;if(!e)throw new Error("<geojson> is required");if(typeof n!="boolean")throw new Error("<reverse> must be a boolean");if(typeof s!="boolean")throw new Error("<mutate> must be a boolean");!s&&e.type!=="Point"&&e.type!=="MultiPoint"&&(e=g(e));const l=[];switch(e.type){case"GeometryCollection":return m(e,function(c){i(c,n)}),e;case"FeatureCollection":return f(e,function(c){const w=i(c,n);f(w,function(b){l.push(b)})}),E(l)}return i(e,n)}function i(e,o){switch(e.type==="Feature"?e.geometry.type:e.type){case"GeometryCollection":return m(e,function(r){i(r,o)}),e;case"LineString":return y(t(e),o),e;case"Polygon":return h(t(e),o),e;case"MultiLineString":return t(e).forEach(function(r){y(r,o)}),e;case"MultiPolygon":return t(e).forEach(function(r){h(r,o)}),e;case"Point":case"MultiPoint":return e}}function y(e,o){u(e)===o&&e.reverse()}function h(e,o){u(e[0])!==o&&e[0].reverse();for(let r=1;r<e.length;r++)u(e[r])===o&&e[r].reverse()}var C=p;export{C as default,p as rewind};
