import{bbox as E}from"../bbox@7.1.0/index.js";import{hexGrid as q}from"../hex-grid@7.1.0/index.js";import{pointGrid as y}from"../point-grid@7.1.0/index.js";import{distance as x}from"../distance@7.1.0/index.js";import{centroid as k}from"../centroid@7.1.0/index.js";import{squareGrid as G}from"../square-grid@7.1.0/index.js";import{triangleGrid as j}from"../triangle-grid@7.1.0/index.js";import{clone as z}from"../clone@7.1.0/index.js";import{featureCollection as P}from"../helpers@7.1.0/index.js";import{featureEach as v}from"../meta@7.1.0/index.js";import{collectionOf as T}from"../invariant@7.1.0/index.js";function b(n,o,r){if(r=r||{},typeof r!="object")throw new Error("options is invalid");var p=r.gridType,i=r.property,t=r.weight;if(!n)throw new Error("points is required");if(T(n,"Point","input must contain Points"),!o)throw new Error("cellSize is required");if(t!==void 0&&typeof t!="number")throw new Error("weight must be a number");i=i||"elevation",p=p||"square",t=t||1;var s=E(n),a;switch(p){case"point":case"points":a=y(s,o,r);break;case"square":case"squares":a=G(s,o,r);break;case"hex":case"hexes":a=q(s,o,r);break;case"triangle":case"triangles":a=j(s,o,r);break;default:throw new Error("invalid gridType")}var u=[];return v(a,function(m){var c=0,d=0;v(n,function(f){var g=p==="point"?m:k(m),w=x(g,f,r),e;if(i!==void 0&&(e=f.properties[i]),e===void 0&&(e=f.geometry.coordinates[2]),e===void 0)throw new Error("zValue is missing");w===0&&(c=e);var h=1/Math.pow(w,t);d+=h,c+=h*e});var l=z(m);l.properties[i]=c/d,u.push(l)}),P(u)}var C=b;export{C as default,b as interpolate};
