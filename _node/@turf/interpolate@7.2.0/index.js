import{bbox as x}from"../bbox@7.2.0/index.js";import{hexGrid as E}from"../hex-grid@7.2.0/index.js";import{pointGrid as q}from"../point-grid@7.2.0/index.js";import{distance as y}from"../distance@7.2.0/index.js";import{centroid as k}from"../centroid@7.2.0/index.js";import{squareGrid as G}from"../square-grid@7.2.0/index.js";import{triangleGrid as j}from"../triangle-grid@7.2.0/index.js";import{clone as z}from"../clone@7.2.0/index.js";import{validateBBox as B,featureCollection as P}from"../helpers@7.2.0/index.js";import{featureEach as h}from"../meta@7.2.0/index.js";import{collectionOf as T}from"../invariant@7.2.0/index.js";function b(p,i,r){if(r=r||{},typeof r!="object")throw new Error("options is invalid");var s=r.gridType,t=r.property,a=r.weight,o=r.bbox;if(!p)throw new Error("points is required");if(T(p,"Point","input must contain Points"),!i)throw new Error("cellSize is required");if(a!==void 0&&typeof a!="number")throw new Error("weight must be a number");t=t||"elevation",s=s||"square",a=a||1,o=o??x(p),B(o);var n;switch(s){case"point":case"points":n=q(o,i,r);break;case"square":case"squares":n=G(o,i,r);break;case"hex":case"hexes":n=E(o,i,r);break;case"triangle":case"triangles":n=j(o,i,r);break;default:throw new Error("invalid gridType")}var d=[];return h(n,function(f){var m=0,u=0;h(p,function(c){var g=s==="point"?f:k(f),v=y(g,c,r),e;if(t!==void 0&&(e=c.properties[t]),e===void 0&&(e=c.geometry.coordinates[2]),e===void 0)throw new Error("zValue is missing");v===0&&(m=e);var w=1/Math.pow(v,a);u+=w,m+=w*e});var l=z(f);l.properties[t]=m/u,d.push(l)}),P(d)}var C=b;export{C as default,b as interpolate};
