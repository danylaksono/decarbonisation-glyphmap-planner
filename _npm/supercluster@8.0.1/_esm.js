/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/supercluster@8.0.1/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import t from"../kdbush@4.0.2/_esm.js";const e={minZoom:0,maxZoom:16,minPoints:2,radius:40,extent:512,nodeSize:64,log:!1,generateId:!1,reduce:null,map:t=>t},s=Math.fround||(o=new Float32Array(1),t=>(o[0]=+t,o[0]));var o;class i{constructor(t){this.options=Object.assign(Object.create(e),t),this.trees=new Array(this.options.maxZoom+1),this.stride=this.options.reduce?7:6,this.clusterProps=[]}load(t){const{log:e,minZoom:o,maxZoom:i}=this.options;e&&console.time("total time");const n=`prepare ${t.length} points`;e&&console.time(n),this.points=t;const r=[];for(let e=0;e<t.length;e++){const o=t[e];if(!o.geometry)continue;const[i,n]=o.geometry.coordinates,c=s(h(i)),u=s(a(n));r.push(c,u,1/0,e,-1,1),this.options.reduce&&r.push(0)}let c=this.trees[i+1]=this._createTree(r);e&&console.timeEnd(n);for(let t=i;t>=o;t--){const s=+Date.now();c=this.trees[t]=this._createTree(this._cluster(c,t)),e&&console.log("z%d: %d clusters in %dms",t,c.numItems,+Date.now()-s)}return e&&console.timeEnd("total time"),this}getClusters(t,e){let s=((t[0]+180)%360+360)%360-180;const o=Math.max(-90,Math.min(90,t[1]));let i=180===t[2]?180:((t[2]+180)%360+360)%360-180;const r=Math.max(-90,Math.min(90,t[3]));if(t[2]-t[0]>=360)s=-180,i=180;else if(s>i){const t=this.getClusters([s,o,180,r],e),n=this.getClusters([-180,o,i,r],e);return t.concat(n)}const c=this.trees[this._limitZoom(e)],u=c.range(h(s),a(r),h(i),a(o)),p=c.data,l=[];for(const t of u){const e=this.stride*t;l.push(p[e+5]>1?n(p,e,this.clusterProps):this.points[p[e+3]])}return l}getChildren(t){const e=this._getOriginId(t),s=this._getOriginZoom(t),o="No cluster with the specified id.",i=this.trees[s];if(!i)throw new Error(o);const r=i.data;if(e*this.stride>=r.length)throw new Error(o);const h=this.options.radius/(this.options.extent*Math.pow(2,s-1)),a=r[e*this.stride],c=r[e*this.stride+1],u=i.within(a,c,h),p=[];for(const e of u){const s=e*this.stride;r[s+4]===t&&p.push(r[s+5]>1?n(r,s,this.clusterProps):this.points[r[s+3]])}if(0===p.length)throw new Error(o);return p}getLeaves(t,e,s){e=e||10,s=s||0;const o=[];return this._appendLeaves(o,t,e,s,0),o}getTile(t,e,s){const o=this.trees[this._limitZoom(t)],i=Math.pow(2,t),{extent:n,radius:r}=this.options,h=r/n,a=(s-h)/i,c=(s+1+h)/i,u={features:[]};return this._addTileFeatures(o.range((e-h)/i,a,(e+1+h)/i,c),o.data,e,s,i,u),0===e&&this._addTileFeatures(o.range(1-h/i,a,1,c),o.data,i,s,i,u),e===i-1&&this._addTileFeatures(o.range(0,a,h/i,c),o.data,-1,s,i,u),u.features.length?u:null}getClusterExpansionZoom(t){let e=this._getOriginZoom(t)-1;for(;e<=this.options.maxZoom;){const s=this.getChildren(t);if(e++,1!==s.length)break;t=s[0].properties.cluster_id}return e}_appendLeaves(t,e,s,o,i){const n=this.getChildren(e);for(const e of n){const n=e.properties;if(n&&n.cluster?i+n.point_count<=o?i+=n.point_count:i=this._appendLeaves(t,n.cluster_id,s,o,i):i<o?i++:t.push(e),t.length===s)break}return i}_createTree(e){const s=new t(e.length/this.stride|0,this.options.nodeSize,Float32Array);for(let t=0;t<e.length;t+=this.stride)s.add(e[t],e[t+1]);return s.finish(),s.data=e,s}_addTileFeatures(t,e,s,o,i,n){for(const c of t){const t=c*this.stride,u=e[t+5]>1;let p,l,d;if(u)p=r(e,t,this.clusterProps),l=e[t],d=e[t+1];else{const s=this.points[e[t+3]];p=s.properties;const[o,i]=s.geometry.coordinates;l=h(o),d=a(i)}const m={type:1,geometry:[[Math.round(this.options.extent*(l*i-s)),Math.round(this.options.extent*(d*i-o))]],tags:p};let g;g=u||this.options.generateId?e[t+3]:this.points[e[t+3]].id,void 0!==g&&(m.id=g),n.features.push(m)}}_limitZoom(t){return Math.max(this.options.minZoom,Math.min(Math.floor(+t),this.options.maxZoom+1))}_cluster(t,e){const{radius:s,extent:o,reduce:i,minPoints:n}=this.options,r=s/(o*Math.pow(2,e)),h=t.data,a=[],c=this.stride;for(let s=0;s<h.length;s+=c){if(h[s+2]<=e)continue;h[s+2]=e;const o=h[s],u=h[s+1],p=t.within(h[s],h[s+1],r),l=h[s+5];let d=l;for(const t of p){const s=t*c;h[s+2]>e&&(d+=h[s+5])}if(d>l&&d>=n){let t,n=o*l,r=u*l,m=-1;const g=(s/c<<5)+(e+1)+this.points.length;for(const o of p){const a=o*c;if(h[a+2]<=e)continue;h[a+2]=e;const u=h[a+5];n+=h[a]*u,r+=h[a+1]*u,h[a+4]=g,i&&(t||(t=this._map(h,s,!0),m=this.clusterProps.length,this.clusterProps.push(t)),i(t,this._map(h,a)))}h[s+4]=g,a.push(n/d,r/d,1/0,g,-1,d),i&&a.push(m)}else{for(let t=0;t<c;t++)a.push(h[s+t]);if(d>1)for(const t of p){const s=t*c;if(!(h[s+2]<=e)){h[s+2]=e;for(let t=0;t<c;t++)a.push(h[s+t])}}}}return a}_getOriginId(t){return t-this.points.length>>5}_getOriginZoom(t){return(t-this.points.length)%32}_map(t,e,s){if(t[e+5]>1){const o=this.clusterProps[t[e+6]];return s?Object.assign({},o):o}const o=this.points[t[e+3]].properties,i=this.options.map(o);return s&&i===o?Object.assign({},i):i}}function n(t,e,s){return{type:"Feature",id:t[e+3],properties:r(t,e,s),geometry:{type:"Point",coordinates:[(o=t[e],360*(o-.5)),c(t[e+1])]}};var o}function r(t,e,s){const o=t[e+5],i=o>=1e4?`${Math.round(o/1e3)}k`:o>=1e3?Math.round(o/100)/10+"k":o,n=t[e+6],r=-1===n?{}:Object.assign({},s[n]);return Object.assign(r,{cluster:!0,cluster_id:t[e+3],point_count:o,point_count_abbreviated:i})}function h(t){return t/360+.5}function a(t){const e=Math.sin(t*Math.PI/180),s=.5-.25*Math.log((1+e)/(1-e))/Math.PI;return s<0?0:s>1?1:s}function c(t){const e=(180-360*t)*Math.PI/180;return 360*Math.atan(Math.exp(e))/Math.PI-90}export{i as default};
