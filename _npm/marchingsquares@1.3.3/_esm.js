/**
 * Bundled by jsDelivr using Rollup v2.79.2 and Terser v5.39.0.
 * Original file: /npm/marchingsquares@1.3.3/dist/marchingsquares-esm.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
/*!
* MarchingSquaresJS
* version 1.3.3
* https://github.com/RaumZeit/MarchingSquares.js
*
* @license GNU Affero General Public License.
* Copyright (c) 2015-2019 Ronny Lorenz <ronny@tbi.univie.ac.at>
*/
function e(e,o,t){return e<o?(t-e)/(o-e):(e-t)/(e-o)}function o(e,o,t,n){var r;return t>n&&(r=t,t=n,n=r),e<o?e<t?(t-e)/(o-e):(n-e)/(o-e):e>n?(e-n)/(e-o):(e-t)/(e-o)}function t(e,o,t,n){return e<o?(t-e)/(o-e):(e-n)/(e-o)}function n(e,o,t,n){return e<o?(n-e)/(o-e):(e-t)/(e-o)}function r(){this.successCallback=null,this.verbose=!1,this.polygons=!1,this.polygons_full=!1,this.linearRing=!0,this.noQuadTree=!1,this.noFrame=!1}function a(e,o,t,n){var r=[];return e.polygons.forEach((function(e){e.forEach((function(e){e[0]+=o,e[1]+=t})),n.linearRing&&e.push(e[0]),r.push(e)})),r}function l(e,o,t,n){return 0===t?(e+=1,o+=n[0][1]):1===t?e+=n[0][0]:2===t?o+=n[0][1]:3===t&&(e+=n[0][0],o+=1),[e,o]}function i(e,o,t){return 0===t?e++:1===t||(2===t?o++:3===t&&(e++,o++)),[e,o]}function s(e,o,t,n,r){var a=n,l=r,i=0,p=0;if(this.x=o,this.y=t,this.lowerBound=null,this.upperBound=null,this.childA=null,this.childB=null,this.childC=null,this.childD=null,1===n&&1===r)this.lowerBound=Math.min(e[t][o],e[t][o+1],e[t+1][o+1],e[t+1][o]),this.upperBound=Math.max(e[t][o],e[t][o+1],e[t+1][o+1],e[t+1][o]);else{if(n>1){for(;0!==a;)a>>=1,i++;n===1<<i-1&&i--,a=1<<i-1}if(r>1){for(;0!==l;)l>>=1,p++;r===1<<p-1&&p--,l=1<<p-1}this.childA=new s(e,o,t,a,l),this.lowerBound=this.childA.lowerBound,this.upperBound=this.childA.upperBound,n-a>0&&(this.childB=new s(e,o+a,t,n-a,l),this.lowerBound=Math.min(this.lowerBound,this.childB.lowerBound),this.upperBound=Math.max(this.upperBound,this.childB.upperBound),r-l>0&&(this.childC=new s(e,o+a,t+l,n-a,r-l),this.lowerBound=Math.min(this.lowerBound,this.childC.lowerBound),this.upperBound=Math.max(this.upperBound,this.childC.upperBound))),r-l>0&&(this.childD=new s(e,o,t+l,a,r-l),this.lowerBound=Math.min(this.lowerBound,this.childD.lowerBound),this.upperBound=Math.max(this.upperBound,this.childD.upperBound))}}function p(e){var o,t;if(!e)throw new Error("data is required");if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("data must be scalar field, i.e. array of arrays");if(e.length<2)throw new Error("data must contain at least two rows");if((t=e[0].length)<2)throw new Error("data must contain at least two columns");for(o=1;o<e.length;o++){if(!Array.isArray(e[o]))throw new Error("Row "+o+" is not an array");if(e[o].length!=t)throw new Error("unequal row lengths detected, please provide a regular grid")}this.data=e,this.root=new s(e,0,0,e[0].length-1,e.length-1)}function h(o,t,n){var s,h,g,u=!1,c=!1,y=null,d=null,f=null,V=null,b=null,x=[];if(!o)throw new Error("data is required");if(null==t)throw new Error("threshold is required");if(n&&"object"!=typeof n)throw new Error("options must be an object");if(s=function(o){var t,n,a,l,i;for(l=new r,o=o||{},i=Object.keys(l),t=0;t<i.length;t++)null!=(a=o[n=i[t]])&&(l[n]=a);return l.polygons_full=!l.polygons,l.interpolate=e,l}(n),o instanceof p)y=o,d=o.root,f=o.data,s.noQuadTree||(u=!0);else{if(!Array.isArray(o)||!Array.isArray(o[0]))throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");f=o}if(Array.isArray(t)){for(c=!0,s.noQuadTree||(u=!0),h=0;h<t.length;h++)if(isNaN(+t[h]))throw new Error("threshold["+h+"] is not a number")}else{if(isNaN(+t))throw new Error("threshold must be a number or array of numbers");t=[t]}return u&&!d&&(y=new p(f),d=y.root,f=y.data),s.verbose&&(s.polygons?console.log("MarchingSquaresJS-isoLines: returning single lines (polygons) for each grid cell"):console.log("MarchingSquaresJS-isoLines: returning line paths (polygons) for entire data grid"),c&&console.log("MarchingSquaresJS-isoLines: multiple lines requested, returning array of line paths instead of lines for a single threshold")),t.forEach((function(e,o){if(b=[],s.threshold=e,s.verbose&&console.log("MarchingSquaresJS-isoLines: computing iso lines for threshold "+e),s.polygons)if(u)d.cellsBelowThreshold(s.threshold,!0).forEach((function(e){b=b.concat(a(m(f,e.x,e.y,s),e.x,e.y,s))}));else for(g=0;g<f.length-1;++g)for(o=0;o<f[0].length-1;++o)b=b.concat(a(m(f,o,g,s),o,g,s));else{for(V=[],o=0;o<f[0].length-1;++o)V[o]=[];if(u)d.cellsBelowThreshold(s.threshold,!1).forEach((function(e){V[e.x][e.y]=m(f,e.x,e.y,s)}));else for(o=0;o<f[0].length-1;++o)for(g=0;g<f.length-1;++g)V[o][g]=m(f,o,g,s);b=function(e,o,t){var n,r,a,s,p,h,m,g,u,c,y,d,f,V,b,x=[],v=e.length-1,_=e[0].length-1,k=["right","bottom","left","top"],w=[0,-1,0,1],B=[-1,0,1,0],E={bottom:1,left:2,top:3,right:0};return t.noFrame||function(e,o){var t,n,r,a,l;for(t=!0,n=e[0].length,r=e.length,l=0;l<r;l++)if(e[l][0]>=o||e[l][n-1]>=o){t=!1;break}if(t&&(e[r-1][0]>=o||e[r-1][n-1]>=o)&&(t=!1),t)for(a=0;a<n-1;a++)if(e[0][a]>=o||e[r-1][a]>o){t=!1;break}return t}(e,t.threshold)&&(t.linearRing?x.push([[0,0],[0,v],[_,v],[_,0],[0,0]]):x.push([[0,0],[0,v],[_,v],[_,0]])),o.forEach((function(e,A){e.forEach((function(e,N){for(n=null,r=0;r<4;r++)if(n=k[r],"object"==typeof e.edges[n]){for(p=[],a=e.edges[n],h=n,m=A,g=N,u=!1,c=[A+a.path[0][0],N+a.path[0][1]],p.push(c);!u&&"object"==typeof(s=o[m][g]).edges[h];)if(a=s.edges[h],delete s.edges[h],(y=a.path[1])[0]+=m,y[1]+=g,p.push(y),h=a.move.enter,m+=a.move.x,g+=a.move.y,void 0===o[m]||void 0===o[m][g]){if(!t.linearRing)break;if(d=0,f=0,m===_?(m--,d=0):m<0?(m++,d=2):g===v?(g--,d=3):g<0&&(g++,d=1),m===A&&g===N&&d===E[n]){u=!0,h=n;break}for(;;){if(V=!1,f>4)throw new Error("Direction change counter overflow! This should never happen!");if(void 0!==o[m]&&void 0!==o[m][g]&&(s=o[m][g],b=k[d],"object"==typeof s.edges[b])){a=s.edges[b],p.push(l(m,g,d,a.path)),h=b,V=!0;break}if(V)break;if(p.push(i(m,g,d)),g+=B[d],void 0!==o[m+=w[d]]&&void 0!==o[m][g]||(0===d&&g<0||1===d&&m<0||2===d&&g===v||3===d&&m===_)&&(m-=w[d],g-=B[d],d=(d+1)%4,f++),m===A&&g===N&&d===E[n]){u=!0,h=n;break}}}!t.linearRing||p[p.length-1][0]===c[0]&&p[p.length-1][1]===c[1]||p.push(c),x.push(p)}}))})),x}(f,V,s)}c?x.push(b):x=b,"function"==typeof s.successCallback&&s.successCallback(x,e)})),x}function m(e,o,t,n){var r,a,l,i,s,p,h=0,m=e[t+1][o],g=e[t+1][o+1],u=e[t][o+1],c=e[t][o],y=n.threshold;if(!(isNaN(c)||isNaN(u)||isNaN(g)||isNaN(m))){switch(h|=m>=y?8:0,h|=g>=y?4:0,h|=u>=y?2:0,p={cval:h=+(h|=c>=y?1:0),polygons:[],edges:{},x0:c,x1:u,x2:g,x3:m},h){case 0:n.polygons&&p.polygons.push([[0,0],[0,1],[1,1],[1,0]]);break;case 15:break;case 14:r=n.interpolate(c,m,y),i=n.interpolate(c,u,y),n.polygons_full&&(p.edges.left={path:[[0,r],[i,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&p.polygons.push([[0,0],[0,r],[i,0]]);break;case 13:i=n.interpolate(c,u,y),a=n.interpolate(u,g,y),n.polygons_full&&(p.edges.bottom={path:[[i,0],[1,a]],move:{x:1,y:0,enter:"left"}}),n.polygons&&p.polygons.push([[i,0],[1,a],[1,0]]);break;case 11:a=n.interpolate(u,g,y),l=n.interpolate(m,g,y),n.polygons_full&&(p.edges.right={path:[[1,a],[l,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&p.polygons.push([[1,a],[l,1],[1,1]]);break;case 7:r=n.interpolate(c,m,y),l=n.interpolate(m,g,y),n.polygons_full&&(p.edges.top={path:[[l,1],[0,r]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&p.polygons.push([[l,1],[0,r],[0,1]]);break;case 1:r=n.interpolate(c,m,y),i=n.interpolate(c,u,y),n.polygons_full&&(p.edges.bottom={path:[[i,0],[0,r]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&p.polygons.push([[i,0],[0,r],[0,1],[1,1],[1,0]]);break;case 2:i=n.interpolate(c,u,y),a=n.interpolate(u,g,y),n.polygons_full&&(p.edges.right={path:[[1,a],[i,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&p.polygons.push([[0,0],[0,1],[1,1],[1,a],[i,0]]);break;case 4:a=n.interpolate(u,g,y),l=n.interpolate(m,g,y),n.polygons_full&&(p.edges.top={path:[[l,1],[1,a]],move:{x:1,y:0,enter:"left"}}),n.polygons&&p.polygons.push([[0,0],[0,1],[l,1],[1,a],[1,0]]);break;case 8:r=n.interpolate(c,m,y),l=n.interpolate(m,g,y),n.polygons_full&&(p.edges.left={path:[[0,r],[l,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&p.polygons.push([[0,0],[0,r],[l,1],[1,1],[1,0]]);break;case 12:r=n.interpolate(c,m,y),a=n.interpolate(u,g,y),n.polygons_full&&(p.edges.left={path:[[0,r],[1,a]],move:{x:1,y:0,enter:"left"}}),n.polygons&&p.polygons.push([[0,0],[0,r],[1,a],[1,0]]);break;case 9:i=n.interpolate(c,u,y),l=n.interpolate(m,g,y),n.polygons_full&&(p.edges.bottom={path:[[i,0],[l,1]],move:{x:0,y:1,enter:"bottom"}}),n.polygons&&p.polygons.push([[i,0],[l,1],[1,1],[1,0]]);break;case 3:r=n.interpolate(c,m,y),a=n.interpolate(u,g,y),n.polygons_full&&(p.edges.right={path:[[1,a],[0,r]],move:{x:-1,y:0,enter:"right"}}),n.polygons&&p.polygons.push([[0,r],[0,1],[1,1],[1,a]]);break;case 6:i=n.interpolate(c,u,y),l=n.interpolate(m,g,y),n.polygons_full&&(p.edges.top={path:[[l,1],[i,0]],move:{x:0,y:-1,enter:"top"}}),n.polygons&&p.polygons.push([[0,0],[0,1],[l,1],[i,0]]);break;case 10:r=n.interpolate(c,m,y),a=n.interpolate(u,g,y),i=n.interpolate(c,u,y),l=n.interpolate(m,g,y),s=(c+u+g+m)/4,n.polygons_full&&(s<y?(p.edges.left={path:[[0,r],[l,1]],move:{x:0,y:1,enter:"bottom"}},p.edges.right={path:[[1,a],[i,0]],move:{x:0,y:-1,enter:"top"}}):(p.edges.right={path:[[1,a],[l,1]],move:{x:0,y:1,enter:"bottom"}},p.edges.left={path:[[0,r],[i,0]],move:{x:0,y:-1,enter:"top"}})),n.polygons&&(s<y?p.polygons.push([[0,0],[0,r],[l,1],[1,1],[1,a],[i,0]]):(p.polygons.push([[0,0],[0,r],[i,0]]),p.polygons.push([[l,1],[1,1],[1,a]])));break;case 5:r=n.interpolate(c,m,y),a=n.interpolate(u,g,y),i=n.interpolate(c,u,y),l=n.interpolate(m,g,y),s=(c+u+g+m)/4,n.polygons_full&&(s<y?(p.edges.bottom={path:[[i,0],[0,r]],move:{x:-1,y:0,enter:"right"}},p.edges.top={path:[[l,1],[1,a]],move:{x:1,y:0,enter:"left"}}):(p.edges.top={path:[[l,1],[0,r]],move:{x:-1,y:0,enter:"right"}},p.edges.bottom={path:[[i,0],[1,a]],move:{x:1,y:0,enter:"left"}})),n.polygons&&(s<y?p.polygons.push([[0,r],[0,1],[l,1],[1,a],[1,0],[i,0]]):(p.polygons.push([[0,r],[0,1],[l,1]]),p.polygons.push([[i,0],[1,a],[1,0]])))}return p}}s.prototype.cellsInBand=function(e,o,t){var n=[];return t=void 0===t||t,this.lowerBound>o||this.upperBound<e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(n=n.concat(this.childA.cellsInBand(e,o,t))),this.childB&&(n=n.concat(this.childB.cellsInBand(e,o,t))),this.childD&&(n=n.concat(this.childD.cellsInBand(e,o,t))),this.childC&&(n=n.concat(this.childC.cellsInBand(e,o,t)))):(t||this.lowerBound<=e||this.upperBound>=o)&&n.push({x:this.x,y:this.y})),n},s.prototype.cellsBelowThreshold=function(e,o){var t=[];return o=void 0===o||o,this.lowerBound>e||(this.childA||this.childB||this.childC||this.childD?(this.childA&&(t=t.concat(this.childA.cellsBelowThreshold(e,o))),this.childB&&(t=t.concat(this.childB.cellsBelowThreshold(e,o))),this.childD&&(t=t.concat(this.childD.cellsBelowThreshold(e,o))),this.childC&&(t=t.concat(this.childC.cellsBelowThreshold(e,o)))):(o||this.upperBound>=e)&&t.push({x:this.x,y:this.y})),t};var g=function(e,o,t,n,r,a){a.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,0]])},u=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate(o,r,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,i],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,i],[l,0],[0,0]])},c=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[1,i]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[1,i],[1,0]])},y=function(e,o,t,n,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(r,n,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,l],[i,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[1,l],[i,1],[1,1]])},d=function(e,o,t,n,r,a){var l=a.interpolate(r,n,a.minV,a.maxV),i=a.interpolate(o,r,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[l,1],[0,i]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,i],[0,1],[l,1]])},f=function(e,o,t,n,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate(o,r,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,l],[0,i]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,i],[0,1],[1,1],[1,l]])},V=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate(r,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[i,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[l,0],[i,1],[1,1],[1,0]])},b=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[1,i]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[1,i],[1,0]])},x=function(e,o,t,n,r,a){var l=a.interpolate(r,n,a.minV,a.maxV),i=a.interpolate(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[l,1],[i,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[l,1],[i,0]])},v=function(e,o,t,n,r,a){var l=a.interpolate_a(o,t,a.minV,a.maxV),i=a.interpolate_b(o,t,a.minV,a.maxV),s=a.interpolate_a(o,r,a.minV,a.maxV),p=a.interpolate_b(o,r,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,p],[i,0]])},_=function(e,o,t,n,r,a){var l=a.interpolate_a(o,t,a.minV,a.maxV),i=a.interpolate_b(o,t,a.minV,a.maxV),s=a.interpolate_a(t,n,a.minV,a.maxV),p=a.interpolate_b(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[1,p]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,s],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[1,p],[1,s],[i,0]])},k=function(e,o,t,n,r,a){var l=a.interpolate_a(r,n,a.minV,a.maxV),i=a.interpolate_b(r,n,a.minV,a.maxV),s=a.interpolate_b(t,n,a.minV,a.maxV),p=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.rb={path:[[1,p],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lt"}}),a.polygons&&e.polygons.push([[1,p],[l,1],[i,1],[1,s]])},w=function(e,o,t,n,r,a){var l=a.interpolate_a(r,n,a.minV,a.maxV),i=a.interpolate_b(r,n,a.minV,a.maxV),s=a.interpolate_b(o,r,a.minV,a.maxV),p=a.interpolate_a(o,r,a.minV,a.maxV);a.polygons_full&&(e.edges.tr={path:[[i,1],[0,p]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[l,1]],move:{x:0,y:1,enter:"bl"}}),a.polygons&&e.polygons.push([[i,1],[0,p],[0,s],[l,1]])},B=function(e,o,t,n,r,a){var l=a.interpolate_a(o,r,a.minV,a.maxV),i=a.interpolate_b(o,r,a.minV,a.maxV),s=a.interpolate_b(t,n,a.minV,a.maxV),p=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lt={path:[[0,i],[1,s]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rb"}}),a.polygons&&e.polygons.push([[0,l],[0,i],[1,s],[1,p]])},E=function(e,o,t,n,r,a){var l=a.interpolate_a(r,n,a.minV,a.maxV),i=a.interpolate_b(r,n,a.minV,a.maxV),s=a.interpolate_b(o,t,a.minV,a.maxV),p=a.interpolate_a(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.tr={path:[[i,1],[s,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[p,0],[l,1]],move:{x:0,y:1,enter:"bl"}}),a.polygons&&e.polygons.push([[p,0],[l,1],[i,1],[s,0]])},A=function(e,o,t,n,r,a){var l=a.interpolate(r,n,a.minV,a.maxV),i=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[l,1],[1,i]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[l,1],[1,i],[1,0]])},N=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate(r,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[1,1],[1,0]])},q=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,i],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[1,1],[1,i],[l,0]])},T=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[i,0],[0,l]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[1,1],[1,0],[i,0]])},C=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate(r,n,a.minV,a.maxV),s=a.interpolate_b(t,n,a.minV,a.maxV),p=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rt"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[i,1],[1,s],[1,p]])},M=function(e,o,t,n,r,a){var l=a.interpolate(t,n,a.minV,a.maxV),i=a.interpolate_b(o,t,a.minV,a.maxV),s=a.interpolate_a(o,t,a.minV,a.maxV),p=a.interpolate(r,n,a.minV,a.maxV);a.polygons_full&&(e.edges.rt={path:[[1,l],[i,0]],move:{x:0,y:-1,enter:"tr"}},e.edges.bl={path:[[s,0],[p,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[p,1],[1,1],[1,l],[i,0],[s,0]])},S=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate_a(o,r,a.minV,a.maxV),s=a.interpolate_b(o,r,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[1,p]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,s],[1,p],[1,0]])},j=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate_a(r,n,a.minV,a.maxV),s=a.interpolate_b(r,n,a.minV,a.maxV),p=a.interpolate(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[s,1],[p,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[s,1],[p,0]])},D=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate(r,n,a.minV,a.maxV),s=a.interpolate_b(o,t,a.minV,a.maxV),p=a.interpolate_a(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[p,0],[0,l]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[i,1],[s,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[0,l],[0,1],[i,1],[s,0],[p,0]])},J=function(e,o,t,n,r,a){var l=a.interpolate_a(o,r,a.minV,a.maxV),i=a.interpolate_b(o,r,a.minV,a.maxV),s=a.interpolate(r,n,a.minV,a.maxV),p=a.interpolate(t,r,a.minV,a.maxV);a.polygons_full&&(e.edges.lt={path:[[0,i],[s,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,p],[0,l]],move:{x:-1,y:0,enter:"rb"}}),a.polygons&&e.polygons.push([[0,l],[0,i],[s,1],[1,1],[1,p]])},R=function(e,o,t,n,r,a){var l=a.interpolate_a(r,n,a.minV,a.maxV),i=a.interpolate_b(r,n,a.minV,a.maxV),s=a.interpolate(t,n,a.minV,a.maxV),p=a.interpolate(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[p,0],[l,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,1],[i,1],[1,s],[1,0],[p,0]])},I=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate_b(t,n,a.minV,a.maxV),s=a.interpolate_a(t,n,a.minV,a.maxV),p=a.interpolate(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[1,i]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,s],[p,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[1,i],[1,s],[p,0]])},Q=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate_a(r,n,a.minV,a.maxV),s=a.interpolate_b(r,n,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[s,1],[1,p]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[s,1],[1,p],[1,0]])},L=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate_a(o,r,a.minV,a.maxV),s=a.interpolate_b(o,r,a.minV,a.maxV),p=a.interpolate(r,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[p,1]],move:{x:0,y:1,enter:"br"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,s],[p,1],[1,1],[1,0]])},W=function(e,o,t,n,r,a){var l=a.interpolate_a(o,t,a.minV,a.maxV),i=a.interpolate_b(o,t,a.minV,a.maxV),s=a.interpolate(o,r,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rt"}},e.edges.rt={path:[[1,p],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,1],[1,1],[1,p],[i,0]])},F=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate(r,n,a.minV,a.maxV),s=a.interpolate_b(t,n,a.minV,a.maxV),p=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.tl={path:[[i,1],[1,s]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,p],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,1],[i,1],[1,s],[1,p],[l,0]])},O=function(e,o,t,n,r,a){var l=a.interpolate(o,r,a.minV,a.maxV),i=a.interpolate(r,n,a.minV,a.maxV),s=a.interpolate(t,n,a.minV,a.maxV),p=a.interpolate(o,t,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,l],[i,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,s],[p,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,l],[i,1],[1,1],[1,s],[p,0]])},z=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate(o,r,a.minV,a.maxV),s=a.interpolate(r,n,a.minV,a.maxV),p=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[s,1],[1,p]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,1],[s,1],[1,p],[1,0]])},G=function(e,o,t,n,r,a){var l=a.interpolate_a(o,t,a.minV,a.maxV),i=a.interpolate_b(o,t,a.minV,a.maxV),s=a.interpolate_a(o,r,a.minV,a.maxV),p=a.interpolate_b(o,r,a.minV,a.maxV),h=a.interpolate(r,n,a.minV,a.maxV),m=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[h,1]],move:{x:0,y:1,enter:"br"}},e.edges.rt={path:[[1,m],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,p],[h,1],[1,1],[1,m],[i,0]])},H=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate(o,r,a.minV,a.maxV),s=a.interpolate_a(r,n,a.minV,a.maxV),p=a.interpolate_b(r,n,a.minV,a.maxV),h=a.interpolate_b(t,n,a.minV,a.maxV),m=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.lb={path:[[0,i],[s,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[p,1],[1,h]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,m],[l,0]],move:{x:0,y:-1,enter:"tl"}}),a.polygons&&e.polygons.push([[0,0],[0,i],[s,1],[p,1],[1,h],[1,m],[l,0]])},K=function(e,o,t,n,r,a){var l=a.interpolate_a(o,t,a.minV,a.maxV),i=a.interpolate_b(o,t,a.minV,a.maxV),s=a.interpolate(o,r,a.minV,a.maxV),p=a.interpolate(r,n,a.minV,a.maxV),h=a.interpolate_b(t,n,a.minV,a.maxV),m=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rt"}},e.edges.tl={path:[[p,1],[1,h]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,m],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,1],[p,1],[1,h],[1,m],[i,0]])},P=function(e,o,t,n,r,a){var l=a.interpolate(o,t,a.minV,a.maxV),i=a.interpolate_a(o,r,a.minV,a.maxV),s=a.interpolate_b(o,r,a.minV,a.maxV),p=a.interpolate_a(r,n,a.minV,a.maxV),h=a.interpolate_b(r,n,a.minV,a.maxV),m=a.interpolate(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.br={path:[[l,0],[0,i]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,s],[p,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[h,1],[1,m]],move:{x:1,y:0,enter:"lb"}}),a.polygons&&e.polygons.push([[l,0],[0,i],[0,s],[p,1],[h,1],[1,m],[1,0]])},U=function(e,o,t,n,r,a){var l=a.interpolate_a(o,t,a.minV,a.maxV),i=a.interpolate_b(o,t,a.minV,a.maxV),s=a.interpolate_a(o,r,a.minV,a.maxV),p=a.interpolate_b(o,r,a.minV,a.maxV),h=a.interpolate_a(r,n,a.minV,a.maxV),m=a.interpolate_b(r,n,a.minV,a.maxV),g=a.interpolate_b(t,n,a.minV,a.maxV),u=a.interpolate_a(t,n,a.minV,a.maxV);a.polygons_full&&(e.edges.bl={path:[[l,0],[0,s]],move:{x:-1,y:0,enter:"rb"}},e.edges.lt={path:[[0,p],[h,1]],move:{x:0,y:1,enter:"bl"}},e.edges.tr={path:[[m,1],[1,g]],move:{x:1,y:0,enter:"lt"}},e.edges.rb={path:[[1,u],[i,0]],move:{x:0,y:-1,enter:"tr"}}),a.polygons&&e.polygons.push([[l,0],[0,s],[0,p],[h,1],[m,1],[1,g],[1,u],[i,0]])};function X(e,s,h,m){var g,u,c,y=!1,d=null,f=null,V=null,b=null,x=!1,v=[],_=[],k=[];if(!e)throw new Error("data is required");if(null==s)throw new Error("lowerBound is required");if(null==h)throw new Error("bandWidth is required");if(m&&"object"!=typeof m)throw new Error("options must be an object");if(c=function(e){var a,l,i,s,p;for(s=new r,e=e||{},p=Object.keys(s),a=0;a<p.length;a++)null!=(i=e[l=p[a]])&&(s[l]=i);return s.polygons_full=!s.polygons,s.interpolate=o,s.interpolate_a=t,s.interpolate_b=n,s}(m),e instanceof p)d=e,f=e.root,V=e.data,c.noQuadTree||(y=!0);else{if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Error("input is neither array of arrays nor object retrieved from 'QuadTree()'");V=e}if(Array.isArray(s)){for(x=!0,c.noQuadTree||(y=!0),g=0;g<s.length;g++)if(isNaN(+s[g]))throw new Error("lowerBound["+g+"] is not a number");if(Array.isArray(h)){if(s.length!==h.length)throw new Error("lowerBound and bandWidth have unequal lengths");for(g=0;g<h.length;g++)if(isNaN(+h[g]))throw new Error("bandWidth["+g+"] is not a number")}else{if(isNaN(+h))throw new Error("bandWidth must be a number");for(v=[],g=0;g<s.length;g++)v.push(h);h=v}}else{if(isNaN(+s))throw new Error("lowerBound must be a number");if(s=[s],isNaN(+h))throw new Error("bandWidth must be a number");h=[h]}return y&&!f&&(d=new p(V),f=d.root,V=d.data),c.verbose&&(c.polygons?console.log("MarchingSquaresJS-isoBands: returning single polygons for each grid cell"):console.log("MarchingSquaresJS-isoBands: returning polygon paths for entire data grid"),x&&console.log("MarchingSquaresJS-isoBands: multiple bands requested, returning array of band polygons instead of polygons for a single band")),s.forEach((function(e,o){if(_=[],c.minV=e,c.maxV=e+h[o],c.verbose&&console.log("MarchingSquaresJS-isoBands: computing isobands for ["+e+":"+(e+h[o])+"]"),c.polygons)if(y)f.cellsInBand(c.minV,c.maxV,!0).forEach((function(e){_=_.concat(a(Z(V,e.x,e.y,c),e.x,e.y,c))}));else for(u=0;u<V.length-1;++u)for(g=0;g<V[0].length-1;++g)_=_.concat(a(Z(V,g,u,c),g,u,c));else{for(b=[],g=0;g<V[0].length-1;++g)b[g]=[];if(y)f.cellsInBand(c.minV,c.maxV,!1).forEach((function(e){b[e.x][e.y]=Z(V,e.x,e.y,c)}));else for(g=0;g<V[0].length-1;++g)for(u=0;u<V.length-1;++u)b[g][u]=Z(V,g,u,c);_=function(e,o,t){var n,r,a,s,p,h,m,g,u,c,y,d,f,V,b,x,v=[],_=e.length-1,k=e[0].length-1,w=[["rt","rb"],["br","bl"],["lb","lt"],["tl","tr"]],B=[0,-1,0,1],E=[-1,0,1,0],A=["bl","lb","lt","tl","tr","rt","rb","br"],N={bl:1,br:1,lb:2,lt:2,tl:3,tr:3,rt:0,rb:0};return function(e,o,t){var n,r,a,l,i;for(n=!0,r=e[0].length,a=e.length,i=0;i<a;i++)if(e[i][0]<o||e[i][0]>t||e[i][r-1]<o||e[i][r-1]>t){n=!1;break}if(n&&(e[a-1][0]<o||e[a-1][0]>t||e[a-1][r-1]<o||e[a-1][r-1]>t)&&(n=!1),n)for(l=0;l<r-1;l++)if(e[0][l]<o||e[0][l]>t||e[a-1][l]<o||e[a-1][l]>t){n=!1;break}return n}(e,t.minV,t.maxV)&&(t.linearRing?v.push([[0,0],[0,_],[k,_],[k,0],[0,0]]):v.push([[0,0],[0,_],[k,_],[k,0]])),o.forEach((function(e,q){e.forEach((function(e,T){for(n=null,a=0;a<8;a++)if(n=A[a],"object"==typeof e.edges[n]){for(r=[],s=e.edges[n],m=n,g=q,u=T,c=!1,y=[q+s.path[0][0],T+s.path[0][1]],r.push(y);!c&&"object"==typeof(d=o[g][u]).edges[m];)if(s=d.edges[m],delete d.edges[m],(b=s.path[1])[0]+=g,b[1]+=u,r.push(b),m=s.move.enter,g+=s.move.x,u+=s.move.y,void 0===o[g]||void 0===o[g][u]){if(f=0,V=0,g===k)g--,f=0;else if(g<0)g++,f=2;else if(u===_)u--,f=3;else{if(!(u<0))throw new Error("Left the grid somewhere in the interior!");u++,f=1}if(g===q&&u===T&&f===N[n]){c=!0,m=n;break}for(;;){if(x=!1,V>4)throw new Error("Direction change counter overflow! This should never happen!");if(void 0!==o[g]&&void 0!==o[g][u])for(d=o[g][u],p=0;p<w[f].length;p++)if(h=w[f][p],"object"==typeof d.edges[h]){s=d.edges[h],r.push(l(g,u,f,s.path)),m=h,x=!0;break}if(x)break;if(r.push(i(g,u,f)),u+=E[f],void 0!==o[g+=B[f]]&&void 0!==o[g][u]||(0===f&&u<0||1===f&&g<0||2===f&&u===_||3===f&&g===k)&&(g-=B[f],u-=E[f],f=(f+1)%4,V++),g===q&&u===T&&f===N[n]){c=!0,m=n;break}}}!t.linearRing||r[r.length-1][0]===y[0]&&r[r.length-1][1]===y[1]||r.push(y),v.push(r)}}))})),v}(V,b,c)}x?k.push(_):k=_,"function"==typeof c.successCallback&&c.successCallback(k,e,h[o])})),k}function Y(e,o,t,n,r,a){var l=(n+t+o+e)/4;return l>a?2:l<r?0:1}function Z(e,o,t,n){var r,a,l=0,i=e[t+1][o],s=e[t+1][o+1],p=e[t][o+1],h=e[t][o],m=n.minV,X=n.maxV;if(!(isNaN(h)||isNaN(p)||isNaN(s)||isNaN(i))){switch(l|=i<m?0:i>X?128:64,l|=s<m?0:s>X?32:16,l|=p<m?0:p>X?8:4,a=0,r={cval:l=+(l|=h<m?0:h>X?2:1),polygons:[],edges:{},x0:h,x1:p,x2:s,x3:i,x:o,y:t},l){case 85:g(r,h,p,s,i,n);case 0:case 170:break;case 169:u(r,h,p,s,i,n);break;case 166:c(r,h,p,s,i,n);break;case 154:y(r,h,p,s,i,n);break;case 106:d(r,h,p,s,i,n);break;case 1:u(r,h,p,s,i,n);break;case 4:c(r,h,p,s,i,n);break;case 16:y(r,h,p,s,i,n);break;case 64:d(r,h,p,s,i,n);break;case 168:v(r,h,p,s,i,n);break;case 162:_(r,h,p,s,i,n);break;case 138:k(r,h,p,s,i,n);break;case 42:w(r,h,p,s,i,n);break;case 2:v(r,h,p,s,i,n);break;case 8:_(r,h,p,s,i,n);break;case 32:k(r,h,p,s,i,n);break;case 128:w(r,h,p,s,i,n);break;case 5:b(r,h,p,s,i,n);break;case 20:V(r,h,p,s,i,n);break;case 80:f(r,h,p,s,i,n);break;case 65:x(r,h,p,s,i,n);break;case 165:b(r,h,p,s,i,n);break;case 150:V(r,h,p,s,i,n);break;case 90:f(r,h,p,s,i,n);break;case 105:x(r,h,p,s,i,n);break;case 160:B(r,h,p,s,i,n);break;case 130:E(r,h,p,s,i,n);break;case 10:B(r,h,p,s,i,n);break;case 40:E(r,h,p,s,i,n);break;case 101:A(r,h,p,s,i,n);break;case 149:N(r,h,p,s,i,n);break;case 86:T(r,h,p,s,i,n);break;case 89:q(r,h,p,s,i,n);break;case 69:A(r,h,p,s,i,n);break;case 21:N(r,h,p,s,i,n);break;case 84:T(r,h,p,s,i,n);break;case 81:q(r,h,p,s,i,n);break;case 96:C(r,h,p,s,i,n);break;case 24:M(r,h,p,s,i,n);break;case 6:S(r,h,p,s,i,n);break;case 129:j(r,h,p,s,i,n);break;case 74:C(r,h,p,s,i,n);break;case 146:M(r,h,p,s,i,n);break;case 164:S(r,h,p,s,i,n);break;case 41:j(r,h,p,s,i,n);break;case 66:D(r,h,p,s,i,n);break;case 144:J(r,h,p,s,i,n);break;case 36:R(r,h,p,s,i,n);break;case 9:I(r,h,p,s,i,n);break;case 104:D(r,h,p,s,i,n);break;case 26:J(r,h,p,s,i,n);break;case 134:R(r,h,p,s,i,n);break;case 161:I(r,h,p,s,i,n);break;case 37:Q(r,h,p,s,i,n);break;case 148:L(r,h,p,s,i,n);break;case 82:W(r,h,p,s,i,n);break;case 73:F(r,h,p,s,i,n);break;case 133:Q(r,h,p,s,i,n);break;case 22:L(r,h,p,s,i,n);break;case 88:W(r,h,p,s,i,n);break;case 97:F(r,h,p,s,i,n);break;case 145:case 25:O(r,h,p,s,i,n);break;case 70:case 100:z(r,h,p,s,i,n);break;case 17:0===(a=Y(h,p,s,i,m,X))?(u(r,h,p,s,i,n),y(r,h,p,s,i,n)):O(r,h,p,s,i,n);break;case 68:0===(a=Y(h,p,s,i,m,X))?(d(r,h,p,s,i,n),c(r,h,p,s,i,n)):z(r,h,p,s,i,n);break;case 153:2===(a=Y(h,p,s,i,m,X))?(u(r,h,p,s,i,n),y(r,h,p,s,i,n)):O(r,h,p,s,i,n);break;case 102:2===(a=Y(h,p,s,i,m,X))?(d(r,h,p,s,i,n),c(r,h,p,s,i,n)):z(r,h,p,s,i,n);break;case 152:2===(a=Y(h,p,s,i,m,X))?(y(r,h,p,s,i,n),v(r,h,p,s,i,n)):G(r,h,p,s,i,n);break;case 137:2===(a=Y(h,p,s,i,m,X))?(u(r,h,p,s,i,n),k(r,h,p,s,i,n)):H(r,h,p,s,i,n);break;case 98:2===(a=Y(h,p,s,i,m,X))?(d(r,h,p,s,i,n),_(r,h,p,s,i,n)):K(r,h,p,s,i,n);break;case 38:2===(a=Y(h,p,s,i,m,X))?(c(r,h,p,s,i,n),w(r,h,p,s,i,n)):P(r,h,p,s,i,n);break;case 18:0===(a=Y(h,p,s,i,m,X))?(y(r,h,p,s,i,n),v(r,h,p,s,i,n)):G(r,h,p,s,i,n);break;case 33:0===(a=Y(h,p,s,i,m,X))?(u(r,h,p,s,i,n),k(r,h,p,s,i,n)):H(r,h,p,s,i,n);break;case 72:0===(a=Y(h,p,s,i,m,X))?(d(r,h,p,s,i,n),_(r,h,p,s,i,n)):K(r,h,p,s,i,n);break;case 132:0===(a=Y(h,p,s,i,m,X))?(c(r,h,p,s,i,n),w(r,h,p,s,i,n)):P(r,h,p,s,i,n);break;case 136:0===(a=Y(h,p,s,i,m,X))?(w(r,h,p,s,i,n),_(r,h,p,s,i,n)):1===a?U(r,h,p,s,i,n):(v(r,h,p,s,i,n),k(r,h,p,s,i,n));break;case 34:0===(a=Y(h,p,s,i,m,X))?(v(r,h,p,s,i,n),k(r,h,p,s,i,n)):1===a?U(r,h,p,s,i,n):(w(r,h,p,s,i,n),_(r,h,p,s,i,n))}return r}}export{p as QuadTree,X as isoBands,h as isoContours,h as isoLines,p as quadTree};export default null;
